<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>从一道写进程REV看GetProcAddress的实现</title>
    <link href="/2024/04/29/%E4%BB%8E%E4%B8%80%E9%81%93%E5%86%99%E8%BF%9B%E7%A8%8BREV%E7%9C%8BGetProcAddress%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    <url>/2024/04/29/%E4%BB%8E%E4%B8%80%E9%81%93%E5%86%99%E8%BF%9B%E7%A8%8BREV%E7%9C%8BGetProcAddress%E7%9A%84%E5%AE%9E%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h3 id="ShellCode"><a href="#ShellCode" class="headerlink" title="ShellCode"></a>ShellCode</h3><h4 id="相关文件分析"><a href="#相关文件分析" class="headerlink" title="相关文件分析"></a>相关文件分析</h4><h5 id="shellcode-code"><a href="#shellcode-code" class="headerlink" title="shellcode.code"></a>shellcode.code</h5><p>一个比较大的函数，用于被读入<code>gen_shellcode.exe</code>中运行。下图中的<code>sub_4255B4</code></p><p><img src="/2024/04/29/%E4%BB%8E%E4%B8%80%E9%81%93%E5%86%99%E8%BF%9B%E7%A8%8BREV%E7%9C%8BGetProcAddress%E7%9A%84%E5%AE%9E%E7%8E%B0//image-20230721115052501.png" alt="shellcode.code"></p><h5 id="gen-shellcode-exe"><a href="#gen-shellcode-exe" class="headerlink" title="gen_shellcode.exe"></a>gen_shellcode.exe</h5><p>执行<code>shellcode.code</code>中的机器码，调用了一些<code>api</code>，并且夹杂了一些判断<code>flag</code>的逻辑。</p><p><img src="/2024/04/29/%E4%BB%8E%E4%B8%80%E9%81%93%E5%86%99%E8%BF%9B%E7%A8%8BREV%E7%9C%8BGetProcAddress%E7%9A%84%E5%AE%9E%E7%8E%B0//image-20230721115704970.png"></p><p><img src="/2024/04/29/%E4%BB%8E%E4%B8%80%E9%81%93%E5%86%99%E8%BF%9B%E7%A8%8BREV%E7%9C%8BGetProcAddress%E7%9A%84%E5%AE%9E%E7%8E%B0//image-20230721115726450.png"></p><p>很奇怪的是在给<code>v16</code>赋值的时候使用的<code>v21</code>是使用<code>0</code>进行初始化的，MARK一下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Cpp"><span class="hljs-built_in">strcpy</span>(v21, <span class="hljs-string">&quot;000000000000000000000000000000000000000000&quot;</span>);<br></code></pre></td></tr></table></figure><p>先写部分的exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">v19 = [<span class="hljs-number">0x00000016</span>, <span class="hljs-number">0x000000B7</span>, <span class="hljs-number">0x000000A2</span>, <span class="hljs-number">0x0000000C</span>, <span class="hljs-number">0x00000079</span>, <span class="hljs-number">0x00000003</span>, <span class="hljs-number">0x00000003</span>, <span class="hljs-number">0x000000AC</span>, <span class="hljs-number">0x0000009E</span>, <span class="hljs-number">0x00000017</span>, <span class="hljs-number">0x00000082</span>, <span class="hljs-number">0x00000057</span>, <span class="hljs-number">0x0000009A</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x000000BC</span>, <span class="hljs-number">0x00000024</span>, <span class="hljs-number">0x0000007F</span>, <span class="hljs-number">0x0000009E</span>, <span class="hljs-number">0x0000005C</span>, <span class="hljs-number">0x0000008B</span>, <span class="hljs-number">0x000000EE</span>, <span class="hljs-number">0x000000D0</span>, <span class="hljs-number">0x0000005D</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x000000BF</span>, <span class="hljs-number">0x00000070</span>, <span class="hljs-number">0x00000047</span>, <span class="hljs-number">0x00000009</span>, <span class="hljs-number">0x00000022</span>, <span class="hljs-number">0x000000D2</span>, <span class="hljs-number">0x0000000F</span>, <span class="hljs-number">0x000000EA</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x0000006D</span>, <span class="hljs-number">0x0000006C</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x0000001E</span>, <span class="hljs-number">0x00000068</span>, <span class="hljs-number">0x0000006A</span>, <span class="hljs-number">0x00000061</span>, <span class="hljs-number">0x0000006C</span>, <span class="hljs-number">0x000000A3</span>]<br>v21 = [<span class="hljs-number">0</span>] * <span class="hljs-built_in">len</span>(v19) <br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">42</span>):<br>v16 = v19[i] ^ <span class="hljs-number">0x46</span> &amp; <span class="hljs-number">0xff</span><br>v15 = v16 + <span class="hljs-number">35</span> &amp; <span class="hljs-number">0xff</span><br>v21[i] = v15 ^ i &amp; <span class="hljs-number">0xff</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(v21[i]),end=<span class="hljs-string">&#x27;,&#x27;</span>)<br></code></pre></td></tr></table></figure><h5 id="nicai-exe"><a href="#nicai-exe" class="headerlink" title="nicai.exe"></a>nicai.exe</h5><p><del>有本事你把pdb也别给我</del></p><p><code>shift+f12</code>搜索关键字符串找<code>main</code>函数：</p><p><img src="/2024/04/29/%E4%BB%8E%E4%B8%80%E9%81%93%E5%86%99%E8%BF%9B%E7%A8%8BREV%E7%9C%8BGetProcAddress%E7%9A%84%E5%AE%9E%E7%8E%B0//image-20230721115956140.png"></p><p><code>main</code>函数：</p><p><img src="/2024/04/29/%E4%BB%8E%E4%B8%80%E9%81%93%E5%86%99%E8%BF%9B%E7%A8%8BREV%E7%9C%8BGetProcAddress%E7%9A%84%E5%AE%9E%E7%8E%B0//image-20230721120011768.png"></p><p><del>回收站，启动！</del> </p><p>其实找找<code>io</code>理理逻辑也还行：</p><p><img src="/2024/04/29/%E4%BB%8E%E4%B8%80%E9%81%93%E5%86%99%E8%BF%9B%E7%A8%8BREV%E7%9C%8BGetProcAddress%E7%9A%84%E5%AE%9E%E7%8E%B0//image-20230721120220327.png" alt="input"></p><p>输入长度为42：</p><p><img src="/2024/04/29/%E4%BB%8E%E4%B8%80%E9%81%93%E5%86%99%E8%BF%9B%E7%A8%8BREV%E7%9C%8BGetProcAddress%E7%9A%84%E5%AE%9E%E7%8E%B0//image-20230721120239446.png"></p><p>把输入<code>slice</code>成一个 <code>32 + 10</code> ：</p><p><img src="/2024/04/29/%E4%BB%8E%E4%B8%80%E9%81%93%E5%86%99%E8%BF%9B%E7%A8%8BREV%E7%9C%8BGetProcAddress%E7%9A%84%E5%AE%9E%E7%8E%B0//image-20230721120312860.png"></p><p>前32位的<code>slice</code>做<code>AES_ECB</code>：</p><p><img src="/2024/04/29/%E4%BB%8E%E4%B8%80%E9%81%93%E5%86%99%E8%BF%9B%E7%A8%8BREV%E7%9C%8BGetProcAddress%E7%9A%84%E5%AE%9E%E7%8E%B0//image-20230721120347709.png"></p><p>按照函数名逆逆可以知道对输入没有经过其他的处理</p><p>之后的两个字符串的输出：</p><p><img src="/2024/04/29/%E4%BB%8E%E4%B8%80%E9%81%93%E5%86%99%E8%BF%9B%E7%A8%8BREV%E7%9C%8BGetProcAddress%E7%9A%84%E5%AE%9E%E7%8E%B0//image-20230721120641519.png"></p><p>关键逻辑来了：</p><p><img src="/2024/04/29/%E4%BB%8E%E4%B8%80%E9%81%93%E5%86%99%E8%BF%9B%E7%A8%8BREV%E7%9C%8BGetProcAddress%E7%9A%84%E5%AE%9E%E7%8E%B0//image-20230721120715886.png"></p><p>在<code>gen_shellcode.exe</code>的文件中，从<code>0x425680</code>处开始，到<code>0x425728</code>处结束，隔三个<code>byte</code>单字节写入<code>AES(input[:32])+input[-10:]</code></p><p>翻译成人话：之前<code>gen_shellcode.exe</code>中给<code>v21</code>赋值时的<code>&#39;0&#39;</code>被修改了</p><p><img src="/2024/04/29/%E4%BB%8E%E4%B8%80%E9%81%93%E5%86%99%E8%BF%9B%E7%A8%8BREV%E7%9C%8BGetProcAddress%E7%9A%84%E5%AE%9E%E7%8E%B0//image-20230721121053896.png"></p><p>所以上面提到的<code>gen_shellcode.exe</code>中的v21数组的初始化操作是通过这里的写入完成。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python">v19 = [<span class="hljs-number">0x00000016</span>, <span class="hljs-number">0x000000B7</span>, <span class="hljs-number">0x000000A2</span>, <span class="hljs-number">0x0000000C</span>, <span class="hljs-number">0x00000079</span>, <span class="hljs-number">0x00000003</span>, <span class="hljs-number">0x00000003</span>, <span class="hljs-number">0x000000AC</span>, <span class="hljs-number">0x0000009E</span>, <span class="hljs-number">0x00000017</span>, <span class="hljs-number">0x00000082</span>, <span class="hljs-number">0x00000057</span>, <span class="hljs-number">0x0000009A</span>, <span class="hljs-number">0x0000000D</span>, <span class="hljs-number">0x000000BC</span>, <span class="hljs-number">0x00000024</span>, <span class="hljs-number">0x0000007F</span>, <span class="hljs-number">0x0000009E</span>, <span class="hljs-number">0x0000005C</span>, <span class="hljs-number">0x0000008B</span>, <span class="hljs-number">0x000000EE</span>, <span class="hljs-number">0x000000D0</span>, <span class="hljs-number">0x0000005D</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x000000BF</span>, <span class="hljs-number">0x00000070</span>, <span class="hljs-number">0x00000047</span>, <span class="hljs-number">0x00000009</span>, <span class="hljs-number">0x00000022</span>, <span class="hljs-number">0x000000D2</span>, <span class="hljs-number">0x0000000F</span>, <span class="hljs-number">0x000000EA</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x0000006D</span>, <span class="hljs-number">0x0000006C</span>, <span class="hljs-number">0x00000062</span>, <span class="hljs-number">0x0000001E</span>, <span class="hljs-number">0x00000068</span>, <span class="hljs-number">0x0000006A</span>, <span class="hljs-number">0x00000061</span>, <span class="hljs-number">0x0000006C</span>, <span class="hljs-number">0x000000A3</span>]<br>v21 = [<span class="hljs-number">0</span>] * <span class="hljs-built_in">len</span>(v19) <br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">42</span>):<br>v16 = v19[i] ^ <span class="hljs-number">0x46</span> &amp; <span class="hljs-number">0xff</span><br>v15 = v16 + <span class="hljs-number">35</span> &amp; <span class="hljs-number">0xff</span><br>v21[i] = v15 ^ i &amp; <span class="hljs-number">0xff</span><br><span class="hljs-keyword">if</span> i &lt; <span class="hljs-number">32</span>:<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(v21[i]),end=<span class="hljs-string">&#x27;,&#x27;</span>)<br><span class="hljs-comment">#recipe=AES_Decrypt(%7B&#x27;option&#x27;:&#x27;UTF8&#x27;,&#x27;string&#x27;:&#x27;yi_he_wei_gui~~~&#x27;%7D,%7B&#x27;option&#x27;:&#x27;Hex&#x27;,&#x27;string&#x27;:&#x27;&#x27;%7D,&#x27;ECB/NoPadding&#x27;,&#x27;Hex&#x27;,&#x27;Raw&#x27;,%7B&#x27;option&#x27;:&#x27;Hex&#x27;,&#x27;string&#x27;:&#x27;&#x27;%7D,%7B&#x27;option&#x27;:&#x27;Hex&#x27;,&#x27;string&#x27;:&#x27;&#x27;%7D)&amp;input=NzMxNTA1NmU2NjZkNmUwYWYzN2RlZDNmZjM2MzEzOGE0Y2VhMmZlM2RmYWMyODUwMDQ0MDNlNjk5YmFhNzJkMA</span><br><span class="hljs-comment">#Welcome_to_the_CTF_world_Have_a_</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">42</span>):<br><span class="hljs-keyword">if</span> i &gt;= <span class="hljs-number">32</span>:<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(v21[i]),end=<span class="hljs-string">&#x27;&#x27;</span>)<br><span class="hljs-comment">#good_time!        </span><br></code></pre></td></tr></table></figure><h4 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h4><p><del>不要问我为什么不放在前面一起讲</del></p><p>上文中提到的<code>gen_shellcode.exe</code>中其实还是有很多关键逻辑没有在这<code>WP</code>中体现的，这里先留个印象：<img src="/2024/04/29/%E4%BB%8E%E4%B8%80%E9%81%93%E5%86%99%E8%BF%9B%E7%A8%8BREV%E7%9C%8BGetProcAddress%E7%9A%84%E5%AE%9E%E7%8E%B0//image-20230816100114043.png"></p><p><img src="/2024/04/29/%E4%BB%8E%E4%B8%80%E9%81%93%E5%86%99%E8%BF%9B%E7%A8%8BREV%E7%9C%8BGetProcAddress%E7%9A%84%E5%AE%9E%E7%8E%B0//image-20230816100149090.png"></p><p>首先需要对PE文件格式有一定了解：[PE Format Poster.graffle (openrce.org)](<a href="http://www.openrce.org/reference_library/files/reference/PE">http://www.openrce.org/reference_library/files/reference/PE</a> Format.pdf)</p><p>首先，<code>v31 = __readfsdword(0x30u)</code>在32位下获取了当前进程的<code>PEB</code>指针，而后者作为一个结构体，定义是这样的：<a href="https://learn.microsoft.com/en-us/windows/win32/api/winternl/ns-winternl-peb">PEB结构体描述</a>。因此，后一行可以被理解为获取了当前<code>PEB</code>中的<code>LDR</code>，接下来的几行也是从对应结构体中获取变量。对应结构体的定义可以参考<code>IDA</code>中的定义。</p><p>接着进入一个<code>do-while</code>循环，通过遍历链表的方式找到<code>kernel32.dll</code>在链表中的位置，从而定位其装载入内存后的<code>DLLBase</code>：</p><p><img src="/2024/04/29/%E4%BB%8E%E4%B8%80%E9%81%93%E5%86%99%E8%BF%9B%E7%A8%8BREV%E7%9C%8BGetProcAddress%E7%9A%84%E5%AE%9E%E7%8E%B0//image-20230816105450312.png"></p><p>可以看到：<img src="/2024/04/29/%E4%BB%8E%E4%B8%80%E9%81%93%E5%86%99%E8%BF%9B%E7%A8%8BREV%E7%9C%8BGetProcAddress%E7%9A%84%E5%AE%9E%E7%8E%B0//image-20230816105539165.png"><img src="/2024/04/29/%E4%BB%8E%E4%B8%80%E9%81%93%E5%86%99%E8%BF%9B%E7%A8%8BREV%E7%9C%8BGetProcAddress%E7%9A%84%E5%AE%9E%E7%8E%B0//image-20230816105555841.png"></p><p>至此，我们成功定位到了<code>kernel32.dll</code>在内存中的位置，接下来需要从它的导出表中获取对应函数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs C">v10 = (_IMAGE_EXPORT_DIRECTORY *)((<span class="hljs-type">char</span> *)DllBase + *(_DWORD *)((<span class="hljs-type">char</span> *)DllBase + *((_DWORD *)DllBase + <span class="hljs-number">15</span>) + <span class="hljs-number">0x78</span>));<br></code></pre></td></tr></table></figure><p>观察一下上述代码并回顾一下PE格式定义，发现在DOS头的<code>0x3C - 0x3F</code>的位置是<code>e_lfanew</code>字段，对应了<code>NT_HEADER</code>的偏移。而<code>NT_HEADER</code>处开始<code>0x78</code>偏移地址正好对应了<code>OPTIONAL_HEADER32</code>中的<code>DATA_DIRECTORY</code>数组，相关定义可以参照<a href="https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-image_data_directory">IMAGE_DATA_DIRECTORY structure</a>，其中第0项对应了导出表的<code>VA</code>和大小，遂将<code>v10</code>类型定义为<code>PIMAGE_EXPORT_DIRECTORY</code>。至此，代码可读性upup！</p><p><img src="/2024/04/29/%E4%BB%8E%E4%B8%80%E9%81%93%E5%86%99%E8%BF%9B%E7%A8%8BREV%E7%9C%8BGetProcAddress%E7%9A%84%E5%AE%9E%E7%8E%B0//image-20230816110830414.png"></p><p>接下来就是从<code>kernel32.dll</code>的导出表中获取<code>GetProcAddress</code>相关的信息，并通过该<code>API</code>获取<code>LoadLibraryA</code>以加载<code>user32.dll</code>，并从中得到<code>MessageBoxA</code>用于最后校验过后的提示的<code>MessageBox</code>：</p><p><img src="/2024/04/29/%E4%BB%8E%E4%B8%80%E9%81%93%E5%86%99%E8%BF%9B%E7%A8%8BREV%E7%9C%8BGetProcAddress%E7%9A%84%E5%AE%9E%E7%8E%B0//image-20230816111427502.png"></p>]]></content>
    
    
    <categories>
      
      <category>组会分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>rust</tag>
      
      <tag>数据结构恢复</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>D3CTF2024-RandomVM</title>
    <link href="/2024/04/29/D3CTF2024-RandomVM/"/>
    <url>/2024/04/29/D3CTF2024-RandomVM/</url>
    
    <content type="html"><![CDATA[<h3 id="RandomVM"><a href="#RandomVM" class="headerlink" title="RandomVM"></a>RandomVM</h3><p>一道好玩的vm，感觉和平时做到的vm不太一样，记录一下解题过程</p><h4 id="main函数"><a href="#main函数" class="headerlink" title="main函数"></a>main函数</h4><p><img src="/2024/04/29/D3CTF2024-RandomVM//image-20240429202027142.png" alt="main函数"></p><p>main函数中通过srand初始化了一个随机数种子。通过<code>17F</code>函数进入vm流程。后续就是一个简单的<code>memcmp</code>校验。</p><h4 id="vm指令"><a href="#vm指令" class="headerlink" title="vm指令"></a>vm指令</h4><p><img src="/2024/04/29/D3CTF2024-RandomVM//image-20240429202204769.png" alt="虚拟机指令"></p><p>大致是通过<code>rand</code>函数确定了整个vm的执行流程。其中较为常见的vm指令略过，存在一类通过<code>syscall</code>进行内存赋值的操作</p><p><img src="/2024/04/29/D3CTF2024-RandomVM//image-20240429202320675.png" alt="虚拟机中的syscall"></p><p>观察下来每个vm指令对应的函数结构相同，均为通过<code>rand</code>函数获取下一条需要执行的指令。于是直接在<code>rand</code>的plt表中下一个条件断点。读取当前执行的函数。由于<code>call</code>指令会将返回地址存放在栈上的原因，在调用<code>rand</code>函数时直接读取栈顶指针指向的地址即为<code>rand</code>函数的返回地址，可以对应到其父函数，再通过<code>decompile</code>直接获取当前函数对应的vm指令。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> idaapi,idc<br>s = idaapi.get_reg_val(<span class="hljs-string">&quot;rsp&quot;</span>)<br>addr = idc.get_qword(s)<br><span class="hljs-comment"># idaapi.get_func_name(addr)</span><br>s = (<span class="hljs-built_in">str</span>(idaapi.decompile(addr)))<br><span class="hljs-built_in">print</span>(s[s.find(<span class="hljs-string">&#x27;[rbp-60h]&#x27;</span>)+<span class="hljs-number">10</span>:s.find(<span class="hljs-string">&#x27;v2[0]&#x27;</span>)])<br></code></pre></td></tr></table></figure><p>同样的，记录一下<code>syscall</code>的参数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> idaapi,idc<br>rdi = <span class="hljs-built_in">hex</span>(idaapi.get_reg_val(<span class="hljs-string">&quot;rdi&quot;</span>))<br>rsi = <span class="hljs-built_in">hex</span>(idaapi.get_reg_val(<span class="hljs-string">&quot;rsi&quot;</span>))<br>rax = <span class="hljs-built_in">hex</span>(idaapi.get_reg_val(<span class="hljs-string">&quot;rax&quot;</span>))<br>rcx = <span class="hljs-built_in">hex</span>(idaapi.get_reg_val(<span class="hljs-string">&quot;rcx&quot;</span>))<br>rdx = <span class="hljs-built_in">hex</span>(idaapi.get_reg_val(<span class="hljs-string">&quot;rdx&quot;</span>))<br>r8 = <span class="hljs-built_in">hex</span>(idaapi.get_reg_val(<span class="hljs-string">&quot;r8&quot;</span>))<br>r9 = <span class="hljs-built_in">hex</span>(idaapi.get_reg_val(<span class="hljs-string">&quot;r9&quot;</span>))<br><span class="hljs-keyword">if</span> rdi != <span class="hljs-string">&#x27;0x0&#x27;</span>:<br>    idaapi.suspend_process()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;syscall:<span class="hljs-subst">&#123;rdi&#125;</span>,rdi:<span class="hljs-subst">&#123;rsi&#125;</span>,rsi:<span class="hljs-subst">&#123;rdx&#125;</span>,rdx:<span class="hljs-subst">&#123;rcx&#125;</span>,r10:<span class="hljs-subst">&#123;r8&#125;</span>,r8:<span class="hljs-subst">&#123;r9&#125;</span>&#x27;</span>)<br></code></pre></td></tr></table></figure><p>由于本体在测试时发现输入过长的字符串后回车会导致超出长度的内容被解析到终端内的下一条命令，因此考虑本题是通过<code>read</code>+<code>stdin</code>的方式进行读取，因此需要校验<code>read</code>读取的总字节数是否为12即可。</p><p><img src="/2024/04/29/D3CTF2024-RandomVM//image-20240429203027803.png" alt="trace的部分结果"></p><p>拿到整个vm执行结束的log之后就是简单的将<code>read</code>替换为<code>BitVec</code>然后开梭。确认了read长度正确之后发现梭不出来，debug了一下几个比较关键的操作，发现没问题之后重新审log，发现有<code>ptrace</code>反调试。在第一次<code>ptrace</code>的时候将返回值改为0即可。</p><p>对于log中的几类情况需要特殊处理一下：</p><ul><li><code>dict[idx] = syscall(xxx)</code>手动根据系统调用返回赋值</li><li><code>if ( (char)dict[idx] &lt; 0 )rand()</code>无视，因为通过条件断点已经获取了所有指令</li><li><code>arr[idx_2] = ((int)arr[idx_2] &gt;&gt; dict[idx]) | (arr[idx_2] &lt;&lt; (8 - dict[idx]))</code> 注意溢出</li><li><code>dict[idx] = 0 --dict[idx]</code> 加上<code>dict[idx]&amp;=0xff</code></li></ul><h4 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br></pre></td><td class="code"><pre><code class="hljs python">cntt = <span class="hljs-number">0</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">dbg</span>():<br>    <span class="hljs-keyword">global</span> cntt<br>    cntt+=<span class="hljs-number">1</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;dbg at <span class="hljs-subst">&#123;cntt&#125;</span> idx = <span class="hljs-subst">&#123;idx&#125;</span>,dict = <span class="hljs-subst">&#123;<span class="hljs-built_in">dict</span>&#125;</span>,arr = <span class="hljs-subst">&#123;arr&#125;</span>,idx_2 = <span class="hljs-subst">&#123;idx_2&#125;</span>&#x27;</span>)<br>ans =  [<span class="hljs-number">0x9D</span>, <span class="hljs-number">0x6B</span>, <span class="hljs-number">0xA1</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0xD7</span>, <span class="hljs-number">0xED</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0xF6</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0xAE</span>, <br>  <span class="hljs-number">0x84</span>, <span class="hljs-number">0x19</span>]<br><span class="hljs-keyword">from</span> z3 <span class="hljs-keyword">import</span> * <br>arr = [<span class="hljs-number">0</span>]*<span class="hljs-number">50</span><br>idx_2 = <span class="hljs-number">0</span><br>idx = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span> = [<span class="hljs-number">0</span>] * <span class="hljs-number">50</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx+=<span class="hljs-number">1</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[<span class="hljs-number">2</span>] = BitVec(<span class="hljs-string">&#x27;input1&#x27;</span>,<span class="hljs-number">8</span>)<br><span class="hljs-comment"># syscall:0x0,rdi:0x0,rsi:0x55aa50106082,rdx:0x1,r10:0x7fe09851f058,r8:0x7fe09851f0a0</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">1</span><br><span class="hljs-comment">#   dict[idx] = syscall(</span><br><span class="hljs-comment">#                 (char)dict[idx],</span><br><span class="hljs-comment">#                 (unsigned int)(char)dict[idx + 1],</span><br><span class="hljs-comment">#                 &amp;dict[idx + 2],</span><br><span class="hljs-comment">#                 (unsigned int)(char)dict[idx + 3])</span><br>idx+=<span class="hljs-number">1</span><br>idx+=<span class="hljs-number">1</span><br>arr[idx_2] ^= <span class="hljs-built_in">dict</span>[idx]<br>idx_2+=<span class="hljs-number">1</span><br>arr[idx_2] = <span class="hljs-built_in">dict</span>[idx]<br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]-=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]&amp;=<span class="hljs-number">0xff</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]-=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]&amp;=<span class="hljs-number">0xff</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br>arr[idx_2] = ((arr[idx_2]&gt;&gt;(<span class="hljs-built_in">dict</span>[idx]&amp;<span class="hljs-number">0xff</span>))&amp;<span class="hljs-number">0xff</span>)|(arr[idx_2]&lt;&lt;((<span class="hljs-number">8</span>-<span class="hljs-built_in">dict</span>[idx])&amp;<span class="hljs-number">0xff</span>))&amp;<span class="hljs-number">0xff</span><br>arr[idx_2] ^= <span class="hljs-built_in">dict</span>[idx]<br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx+=<span class="hljs-number">1</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br><span class="hljs-comment"># syscall:0x0,rdi:0x0,rsi:0x55aa50106084,rdx:0x1,r10:0x7fe09851f054,r8:0x7fe09851f0a0</span><br><span class="hljs-built_in">dict</span>[<span class="hljs-number">4</span>] = BitVec(<span class="hljs-string">&#x27;input2&#x27;</span>,<span class="hljs-number">8</span>)<br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">1</span><br><span class="hljs-comment">#   dict[idx] = syscall(</span><br><span class="hljs-comment">#                 (char)dict[idx],</span><br><span class="hljs-comment">#                 (unsigned int)(char)dict[idx + 1],</span><br><span class="hljs-comment">#                 &amp;dict[idx + 2],</span><br><span class="hljs-comment">#                 (unsigned int)(char)dict[idx + 3])</span><br>idx+=<span class="hljs-number">1</span><br>idx+=<span class="hljs-number">1</span><br>arr[idx_2] ^= <span class="hljs-built_in">dict</span>[idx]<br>idx_2+=<span class="hljs-number">1</span><br>arr[idx_2] = <span class="hljs-built_in">dict</span>[idx]<br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]-=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]&amp;=<span class="hljs-number">0xff</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx-=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]-=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]&amp;=<span class="hljs-number">0xff</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]-=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]&amp;=<span class="hljs-number">0xff</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br>arr[idx_2] = ((arr[idx_2]&gt;&gt;(<span class="hljs-built_in">dict</span>[idx]&amp;<span class="hljs-number">0xff</span>))&amp;<span class="hljs-number">0xff</span>)|(arr[idx_2]&lt;&lt;((<span class="hljs-number">8</span>-<span class="hljs-built_in">dict</span>[idx])&amp;<span class="hljs-number">0xff</span>))&amp;<span class="hljs-number">0xff</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx+=<span class="hljs-number">1</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[<span class="hljs-number">6</span>] = BitVec(<span class="hljs-string">&#x27;input3&#x27;</span>,<span class="hljs-number">8</span>)<br><span class="hljs-comment"># syscall:0x0,rdi:0x0,rsi:0x55aa50106086,rdx:0x1,r10:0x7fe09851f044,r8:0x7fe09851f0a0</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">1</span><br><span class="hljs-comment">#   dict[idx] = syscall(</span><br><span class="hljs-comment">#                 (char)dict[idx],</span><br><span class="hljs-comment">#                 (unsigned int)(char)dict[idx + 1],</span><br><span class="hljs-comment">#                 &amp;dict[idx + 2],</span><br><span class="hljs-comment">#                 (unsigned int)(char)dict[idx + 3])</span><br>idx+=<span class="hljs-number">1</span><br>idx+=<span class="hljs-number">1</span><br>arr[idx_2] ^= <span class="hljs-built_in">dict</span>[idx]<br>idx_2+=<span class="hljs-number">1</span><br>arr[idx_2] = <span class="hljs-built_in">dict</span>[idx]<br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx-=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0xff</span><br><span class="hljs-comment"># syscall:0x65,rdi:0x0,rsi:0x55aa50106088,rdx:0x0,r10:0x7fe09851f034,r8:0x7fe09851f0a0</span><br><span class="hljs-comment">#   dict[idx] = syscall(</span><br><span class="hljs-comment">#                 (char)dict[idx],</span><br><span class="hljs-comment">#                 (unsigned int)(char)dict[idx + 1],</span><br><span class="hljs-comment">#                 &amp;dict[idx + 2],</span><br><span class="hljs-comment">#                 (unsigned int)(char)dict[idx + 3])</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br>arr[idx_2] = ((arr[idx_2]&gt;&gt;(<span class="hljs-built_in">dict</span>[idx]&amp;<span class="hljs-number">0xff</span>))&amp;<span class="hljs-number">0xff</span>)|(arr[idx_2]&lt;&lt;((<span class="hljs-number">8</span>-<span class="hljs-built_in">dict</span>[idx])&amp;<span class="hljs-number">0xff</span>))&amp;<span class="hljs-number">0xff</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx+=<span class="hljs-number">1</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[<span class="hljs-number">8</span>] = BitVec(<span class="hljs-string">&#x27;input4&#x27;</span>,<span class="hljs-number">8</span>)<br><span class="hljs-comment"># syscall:0x0,rdi:0x0,rsi:0x55aa50106088,rdx:0x1,r10:0x7fe09851f088,r8:0x7fe09851f0a0</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">1</span><br><span class="hljs-comment">#   dict[idx] = syscall(</span><br><span class="hljs-comment">#                 (char)dict[idx],</span><br><span class="hljs-comment">#                 (unsigned int)(char)dict[idx + 1],</span><br><span class="hljs-comment">#                 &amp;dict[idx + 2],</span><br><span class="hljs-comment">#                 (unsigned int)(char)dict[idx + 3])</span><br>idx+=<span class="hljs-number">1</span><br>idx+=<span class="hljs-number">1</span><br>arr[idx_2] ^= <span class="hljs-built_in">dict</span>[idx]<br>idx_2+=<span class="hljs-number">1</span><br>arr[idx_2] = <span class="hljs-built_in">dict</span>[idx]<br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]-=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]&amp;=<span class="hljs-number">0xff</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br>arr[idx_2] = ((arr[idx_2]&gt;&gt;(<span class="hljs-built_in">dict</span>[idx]&amp;<span class="hljs-number">0xff</span>))&amp;<span class="hljs-number">0xff</span>)|(arr[idx_2]&lt;&lt;((<span class="hljs-number">8</span>-<span class="hljs-built_in">dict</span>[idx])&amp;<span class="hljs-number">0xff</span>))&amp;<span class="hljs-number">0xff</span><br>arr[idx_2] ^= <span class="hljs-built_in">dict</span>[idx]<br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx+=<span class="hljs-number">1</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[<span class="hljs-number">0xa</span>] = BitVec(<span class="hljs-string">&#x27;input5&#x27;</span>,<span class="hljs-number">8</span>)<br><span class="hljs-comment"># syscall:0x0,rdi:0x0,rsi:0x55aa5010608a,rdx:0x1,r10:0x7fe09851f084,r8:0x7fe09851f0a0</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">1</span><br><span class="hljs-comment">#   dict[idx] = syscall(</span><br><span class="hljs-comment">#                 (char)dict[idx],</span><br><span class="hljs-comment">#                 (unsigned int)(char)dict[idx + 1],</span><br><span class="hljs-comment">#                 &amp;dict[idx + 2],</span><br><span class="hljs-comment">#                 (unsigned int)(char)dict[idx + 3])</span><br>idx+=<span class="hljs-number">1</span><br>idx+=<span class="hljs-number">1</span><br>arr[idx_2] ^= <span class="hljs-built_in">dict</span>[idx]<br>idx_2+=<span class="hljs-number">1</span><br>arr[idx_2] = <span class="hljs-built_in">dict</span>[idx]<br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]-=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]&amp;=<span class="hljs-number">0xff</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br>arr[idx_2] = ((arr[idx_2]&gt;&gt;(<span class="hljs-built_in">dict</span>[idx]&amp;<span class="hljs-number">0xff</span>))&amp;<span class="hljs-number">0xff</span>)|(arr[idx_2]&lt;&lt;((<span class="hljs-number">8</span>-<span class="hljs-built_in">dict</span>[idx])&amp;<span class="hljs-number">0xff</span>))&amp;<span class="hljs-number">0xff</span><br>arr[idx_2] ^= <span class="hljs-built_in">dict</span>[idx]<br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx+=<span class="hljs-number">1</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[<span class="hljs-number">0xc</span>] = BitVec(<span class="hljs-string">&#x27;input6&#x27;</span>,<span class="hljs-number">8</span>)<br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">1</span><br><span class="hljs-comment"># syscall:0x0,rdi:0x0,rsi:0x55aa5010608c,rdx:0x1,r10:0x7fe09851f074,r8:0x7fe09851f0a0</span><br><span class="hljs-comment">#   dict[idx] = syscall(</span><br><span class="hljs-comment">#                 (char)dict[idx],</span><br><span class="hljs-comment">#                 (unsigned int)(char)dict[idx + 1],</span><br><span class="hljs-comment">#                 &amp;dict[idx + 2],</span><br><span class="hljs-comment">#                 (unsigned int)(char)dict[idx + 3])</span><br>idx+=<span class="hljs-number">1</span><br>idx+=<span class="hljs-number">1</span><br>arr[idx_2] ^= <span class="hljs-built_in">dict</span>[idx]<br>idx_2+=<span class="hljs-number">1</span><br>arr[idx_2] = <span class="hljs-built_in">dict</span>[idx]<br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]-=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]&amp;=<span class="hljs-number">0xff</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br>arr[idx_2] = ((arr[idx_2]&gt;&gt;(<span class="hljs-built_in">dict</span>[idx]&amp;<span class="hljs-number">0xff</span>))&amp;<span class="hljs-number">0xff</span>)|(arr[idx_2]&lt;&lt;((<span class="hljs-number">8</span>-<span class="hljs-built_in">dict</span>[idx])&amp;<span class="hljs-number">0xff</span>))&amp;<span class="hljs-number">0xff</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx+=<span class="hljs-number">1</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[<span class="hljs-number">0xe</span>] = BitVec(<span class="hljs-string">&#x27;input7&#x27;</span>,<span class="hljs-number">8</span>)<br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">1</span><br><span class="hljs-comment"># syscall:0x0,rdi:0x0,rsi:0x55aa5010608e,rdx:0x1,r10:0x7fe09851f060,r8:0x7fe09851f0a0</span><br><span class="hljs-comment">#   dict[idx] = syscall(</span><br><span class="hljs-comment">#                 (char)dict[idx],</span><br><span class="hljs-comment">#                 (unsigned int)(char)dict[idx + 1],</span><br><span class="hljs-comment">#                 &amp;dict[idx + 2],</span><br><span class="hljs-comment">#                 (unsigned int)(char)dict[idx + 3])</span><br>idx+=<span class="hljs-number">1</span><br>idx+=<span class="hljs-number">1</span><br>arr[idx_2] ^= <span class="hljs-built_in">dict</span>[idx]<br>idx_2+=<span class="hljs-number">1</span><br>arr[idx_2] = <span class="hljs-built_in">dict</span>[idx]<br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br>arr[idx_2] = ((arr[idx_2]&gt;&gt;(<span class="hljs-built_in">dict</span>[idx]&amp;<span class="hljs-number">0xff</span>))&amp;<span class="hljs-number">0xff</span>)|(arr[idx_2]&lt;&lt;((<span class="hljs-number">8</span>-<span class="hljs-built_in">dict</span>[idx])&amp;<span class="hljs-number">0xff</span>))&amp;<span class="hljs-number">0xff</span><br>arr[idx_2] ^= <span class="hljs-built_in">dict</span>[idx]<br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx+=<span class="hljs-number">1</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[<span class="hljs-number">0x10</span>] = BitVec(<span class="hljs-string">&#x27;input8&#x27;</span>,<span class="hljs-number">8</span>)<br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">1</span><br><span class="hljs-comment"># syscall:0x0,rdi:0x0,rsi:0x55aa50106090,rdx:0x1,r10:0x7fe09851f04c,r8:0x7fe09851f0a0</span><br><span class="hljs-comment">#   dict[idx] = syscall(</span><br><span class="hljs-comment">#                 (char)dict[idx],</span><br><span class="hljs-comment">#                 (unsigned int)(char)dict[idx + 1],</span><br><span class="hljs-comment">#                 &amp;dict[idx + 2],</span><br><span class="hljs-comment">#                 (unsigned int)(char)dict[idx + 3])</span><br>idx+=<span class="hljs-number">1</span><br>idx+=<span class="hljs-number">1</span><br>arr[idx_2] ^= <span class="hljs-built_in">dict</span>[idx]<br>idx_2+=<span class="hljs-number">1</span><br>arr[idx_2] = <span class="hljs-built_in">dict</span>[idx]<br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]-=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]&amp;=<span class="hljs-number">0xff</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br>arr[idx_2] = ((arr[idx_2]&gt;&gt;(<span class="hljs-built_in">dict</span>[idx]&amp;<span class="hljs-number">0xff</span>))&amp;<span class="hljs-number">0xff</span>)|(arr[idx_2]&lt;&lt;((<span class="hljs-number">8</span>-<span class="hljs-built_in">dict</span>[idx])&amp;<span class="hljs-number">0xff</span>))&amp;<span class="hljs-number">0xff</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx+=<span class="hljs-number">1</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[<span class="hljs-number">0x12</span>] = BitVec(<span class="hljs-string">&#x27;input9&#x27;</span>,<span class="hljs-number">8</span>)<br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">1</span><br><span class="hljs-comment"># syscall:0x0,rdi:0x0,rsi:0x55aa50106092,rdx:0x1,r10:0x7fe09851f044,r8:0x7fe09851f0a0</span><br><span class="hljs-comment">#   dict[idx] = syscall(</span><br><span class="hljs-comment">#                 (char)dict[idx],</span><br><span class="hljs-comment">#                 (unsigned int)(char)dict[idx + 1],</span><br><span class="hljs-comment">#                 &amp;dict[idx + 2],</span><br><span class="hljs-comment">#                 (unsigned int)(char)dict[idx + 3])</span><br>idx+=<span class="hljs-number">1</span><br>idx+=<span class="hljs-number">1</span><br>arr[idx_2] ^= <span class="hljs-built_in">dict</span>[idx]<br>idx_2+=<span class="hljs-number">1</span><br>arr[idx_2] = <span class="hljs-built_in">dict</span>[idx]<br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]-=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]&amp;=<span class="hljs-number">0xff</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx-=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0xff</span><br><span class="hljs-comment"># syscall:0x65,rdi:0x0,rsi:0x55aa50106094,rdx:0x0,r10:0x7fe09851f044,r8:0x7fe09851f0a0</span><br><span class="hljs-comment">#   dict[idx] = syscall(</span><br><span class="hljs-comment">#                 (char)dict[idx],</span><br><span class="hljs-comment">#                 (unsigned int)(char)dict[idx + 1],</span><br><span class="hljs-comment">#                 &amp;dict[idx + 2],</span><br><span class="hljs-comment">#                 (unsigned int)(char)dict[idx + 3])</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]-=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]&amp;=<span class="hljs-number">0xff</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br>arr[idx_2] = ((arr[idx_2]&gt;&gt;(<span class="hljs-built_in">dict</span>[idx]&amp;<span class="hljs-number">0xff</span>))&amp;<span class="hljs-number">0xff</span>)|(arr[idx_2]&lt;&lt;((<span class="hljs-number">8</span>-<span class="hljs-built_in">dict</span>[idx])&amp;<span class="hljs-number">0xff</span>))&amp;<span class="hljs-number">0xff</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx+=<span class="hljs-number">1</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[<span class="hljs-number">0x14</span>] = BitVec(<span class="hljs-string">&#x27;input10&#x27;</span>,<span class="hljs-number">8</span>)<br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">1</span><br><span class="hljs-comment"># syscall:0x0,rdi:0x0,rsi:0x55aa50106094,rdx:0x1,r10:0x7fe09851f098,r8:0x7fe09851f0a0</span><br><span class="hljs-comment">#   dict[idx] = syscall(</span><br><span class="hljs-comment">#                 (char)dict[idx],</span><br><span class="hljs-comment">#                 (unsigned int)(char)dict[idx + 1],</span><br><span class="hljs-comment">#                 &amp;dict[idx + 2],</span><br><span class="hljs-comment">#                 (unsigned int)(char)dict[idx + 3])</span><br>idx+=<span class="hljs-number">1</span><br>idx+=<span class="hljs-number">1</span><br>arr[idx_2] ^= <span class="hljs-built_in">dict</span>[idx]<br>idx_2+=<span class="hljs-number">1</span><br>arr[idx_2] = <span class="hljs-built_in">dict</span>[idx]<br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]-=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]&amp;=<span class="hljs-number">0xff</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]-=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]&amp;=<span class="hljs-number">0xff</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br>arr[idx_2] = ((arr[idx_2]&gt;&gt;(<span class="hljs-built_in">dict</span>[idx]&amp;<span class="hljs-number">0xff</span>))&amp;<span class="hljs-number">0xff</span>)|(arr[idx_2]&lt;&lt;((<span class="hljs-number">8</span>-<span class="hljs-built_in">dict</span>[idx])&amp;<span class="hljs-number">0xff</span>))&amp;<span class="hljs-number">0xff</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx+=<span class="hljs-number">1</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[<span class="hljs-number">0x16</span>] = BitVec(<span class="hljs-string">&#x27;input11&#x27;</span>,<span class="hljs-number">8</span>)<br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">1</span><br><span class="hljs-comment"># syscall:0x0,rdi:0x0,rsi:0x55aa50106096,rdx:0x1,r10:0x7fe09851f094,r8:0x7fe09851f0a0</span><br><span class="hljs-comment">#   dict[idx] = syscall(</span><br><span class="hljs-comment">#                 (char)dict[idx],</span><br><span class="hljs-comment">#                 (unsigned int)(char)dict[idx + 1],</span><br><span class="hljs-comment">#                 &amp;dict[idx + 2],</span><br><span class="hljs-comment">#                 (unsigned int)(char)dict[idx + 3])</span><br>idx+=<span class="hljs-number">1</span><br>idx+=<span class="hljs-number">1</span><br>arr[idx_2] ^= <span class="hljs-built_in">dict</span>[idx]<br>idx_2+=<span class="hljs-number">1</span><br>arr[idx_2] = <span class="hljs-built_in">dict</span>[idx]<br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br>arr[idx_2] = ((arr[idx_2]&gt;&gt;(<span class="hljs-built_in">dict</span>[idx]&amp;<span class="hljs-number">0xff</span>))&amp;<span class="hljs-number">0xff</span>)|(arr[idx_2]&lt;&lt;((<span class="hljs-number">8</span>-<span class="hljs-built_in">dict</span>[idx])&amp;<span class="hljs-number">0xff</span>))&amp;<span class="hljs-number">0xff</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br>idx+=<span class="hljs-number">1</span><br>idx+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br>idx-=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[<span class="hljs-number">0x18</span>] = BitVec(<span class="hljs-string">&#x27;input12&#x27;</span>,<span class="hljs-number">8</span>)<br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">1</span><br><span class="hljs-comment"># syscall:0x0,rdi:0x0,rsi:0x55aa50106098,rdx:0x1,r10:0x7fe09851f070,r8:0x7fe09851f0a0</span><br><span class="hljs-comment">#   dict[idx] = syscall(</span><br><span class="hljs-comment">#                 (char)dict[idx],</span><br><span class="hljs-comment">#                 (unsigned int)(char)dict[idx + 1],</span><br><span class="hljs-comment">#                 &amp;dict[idx + 2],</span><br><span class="hljs-comment">#                 (unsigned int)(char)dict[idx + 3])</span><br>idx+=<span class="hljs-number">1</span><br>idx+=<span class="hljs-number">1</span><br>arr[idx_2] ^= <span class="hljs-built_in">dict</span>[idx]<br>idx_2+=<span class="hljs-number">1</span><br>arr[idx_2] = <span class="hljs-built_in">dict</span>[idx]<br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]-=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]&amp;=<span class="hljs-number">0xff</span><br><span class="hljs-built_in">dict</span>[idx] = <span class="hljs-number">0</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx]+=<span class="hljs-number">1</span><br>arr[idx_2] = ((arr[idx_2]&gt;&gt;(<span class="hljs-built_in">dict</span>[idx]&amp;<span class="hljs-number">0xff</span>))&amp;<span class="hljs-number">0xff</span>)|(arr[idx_2]&lt;&lt;((<span class="hljs-number">8</span>-<span class="hljs-built_in">dict</span>[idx])&amp;<span class="hljs-number">0xff</span>))&amp;<span class="hljs-number">0xff</span><br>arr[idx_2] ^= <span class="hljs-built_in">dict</span>[idx]<br>idx_2-=<span class="hljs-number">1</span><br>idx_2-=<span class="hljs-number">1</span><br>idx_2-=<span class="hljs-number">1</span><br>idx_2-=<span class="hljs-number">1</span><br>idx_2-=<span class="hljs-number">1</span><br>idx_2-=<span class="hljs-number">1</span><br>idx_2-=<span class="hljs-number">1</span><br>idx_2-=<span class="hljs-number">1</span><br>idx_2-=<span class="hljs-number">1</span><br>idx_2-=<span class="hljs-number">1</span><br>idx_2-=<span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span>[idx] = arr[idx_2]<br>idx_2+=<span class="hljs-number">1</span><br>arr[idx_2] ^= <span class="hljs-built_in">dict</span>[idx]<br><span class="hljs-built_in">dict</span>[idx] = arr[idx_2]<br>idx_2+=<span class="hljs-number">1</span><br>arr[idx_2] ^= <span class="hljs-built_in">dict</span>[idx]<br><span class="hljs-built_in">dict</span>[idx] = arr[idx_2]<br>idx_2+=<span class="hljs-number">1</span><br>arr[idx_2] ^= <span class="hljs-built_in">dict</span>[idx]<br><span class="hljs-built_in">dict</span>[idx] = arr[idx_2]<br>idx_2+=<span class="hljs-number">1</span><br>arr[idx_2] ^= <span class="hljs-built_in">dict</span>[idx]<br><span class="hljs-built_in">dict</span>[idx] = arr[idx_2]<br>idx_2+=<span class="hljs-number">1</span><br>arr[idx_2] ^= <span class="hljs-built_in">dict</span>[idx]<br><span class="hljs-built_in">dict</span>[idx] = arr[idx_2]<br>idx_2+=<span class="hljs-number">1</span><br>arr[idx_2] ^= <span class="hljs-built_in">dict</span>[idx]<br><span class="hljs-built_in">dict</span>[idx] = arr[idx_2]<br>idx_2+=<span class="hljs-number">1</span><br>arr[idx_2] ^= <span class="hljs-built_in">dict</span>[idx]<br><span class="hljs-built_in">dict</span>[idx] = arr[idx_2]<br>idx_2+=<span class="hljs-number">1</span><br>arr[idx_2] ^= <span class="hljs-built_in">dict</span>[idx]<br><span class="hljs-built_in">dict</span>[idx] = arr[idx_2]<br>idx_2+=<span class="hljs-number">1</span><br>arr[idx_2] ^= <span class="hljs-built_in">dict</span>[idx]<br><span class="hljs-built_in">dict</span>[idx] = arr[idx_2]<br>idx_2+=<span class="hljs-number">1</span><br>arr[idx_2] ^= <span class="hljs-built_in">dict</span>[idx]<br><span class="hljs-built_in">dict</span>[idx] = arr[idx_2]<br>idx_2+=<span class="hljs-number">1</span><br>arr[idx_2] ^= <span class="hljs-built_in">dict</span>[idx]<br>s = Solver()<br>s.add(arr[<span class="hljs-number">1</span>] == ans[<span class="hljs-number">0</span>])<br>s.add(arr[<span class="hljs-number">2</span>] == ans[<span class="hljs-number">1</span>])<br>s.add(arr[<span class="hljs-number">3</span>] == ans[<span class="hljs-number">2</span>])<br>s.add(arr[<span class="hljs-number">4</span>] == ans[<span class="hljs-number">3</span>])<br>s.add(arr[<span class="hljs-number">5</span>] == ans[<span class="hljs-number">4</span>])<br>s.add(arr[<span class="hljs-number">6</span>] == ans[<span class="hljs-number">5</span>])<br>s.add(arr[<span class="hljs-number">7</span>] == ans[<span class="hljs-number">6</span>])<br>s.add(arr[<span class="hljs-number">8</span>] == ans[<span class="hljs-number">7</span>])<br>s.add(arr[<span class="hljs-number">9</span>] == ans[<span class="hljs-number">8</span>])<br>s.add(arr[<span class="hljs-number">10</span>] == ans[<span class="hljs-number">9</span>])<br>s.add(arr[<span class="hljs-number">11</span>] == ans[<span class="hljs-number">10</span>])<br>s.add(arr[<span class="hljs-number">12</span>] == ans[<span class="hljs-number">11</span>])<br><span class="hljs-built_in">print</span>(arr)<br><span class="hljs-keyword">if</span> s.check() == sat:<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> s.model():<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;x&#125;</span>=<span class="hljs-subst">&#123;<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(<span class="hljs-built_in">str</span>(s.model()[x])))&#125;</span>&#x27;</span>)<br>        <span class="hljs-comment"># print(x,(s.model()[x]))</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">input1=m</span><br><span class="hljs-string">input11=v</span><br><span class="hljs-string">input5=J</span><br><span class="hljs-string">input8=p</span><br><span class="hljs-string">input10=m</span><br><span class="hljs-string">input12=M</span><br><span class="hljs-string">input6=u</span><br><span class="hljs-string">input9=V</span><br><span class="hljs-string">input2=3</span><br><span class="hljs-string">input3=o</span><br><span class="hljs-string">input4=w</span><br><span class="hljs-string">input7=m</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>组会分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VM</tag>
      
      <tag>IDAPython</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DAS六月赛-REV</title>
    <link href="/2023/07/11/DAS%E4%BA%94%E6%9C%88%E8%B5%9B-REV/"/>
    <url>/2023/07/11/DAS%E4%BA%94%E6%9C%88%E8%B5%9B-REV/</url>
    
    <content type="html"><![CDATA[<h2 id="Careful"><a href="#Careful" class="headerlink" title="Careful"></a>Careful</h2><p>省流版：<img src="/2023/07/11/DAS%E4%BA%94%E6%9C%88%E8%B5%9B-REV//image-20230711212308205.png" alt="但是我会动调"></p><h3 id="静态分析"><a href="#静态分析" class="headerlink" title="静态分析"></a>静态分析</h3><p>关键逻辑好像也就这些…?先初始化一个v13数组，然后ROR一下存入name里，就变成了请求的域名？</p><p><img src="/2023/07/11/DAS%E4%BA%94%E6%9C%88%E8%B5%9B-REV//image-20230711150225031.png"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&quot;defs.h&quot;</span></span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><span class="hljs-type">signed</span> <span class="hljs-type">int</span> v4; <span class="hljs-comment">// kr00_4</span><br><span class="hljs-type">char</span> v13[<span class="hljs-number">21</span>]; <span class="hljs-comment">// [esp+218h] [ebp-148h] BYREF</span><br>  __int64 v14; <span class="hljs-comment">// [esp+22Dh] [ebp-133h]</span><br>  <span class="hljs-type">char</span> v15; <span class="hljs-comment">// [esp+235h] [ebp-12Bh]</span><br>  <span class="hljs-type">char</span> name[<span class="hljs-number">32</span>]; <span class="hljs-comment">// [esp+238h] [ebp-128h] BYREF</span><br>  <span class="hljs-type">char</span> buf[<span class="hljs-number">260</span>];<br>  *(_DWORD *)v13 = <span class="hljs-number">0x1BB1CA77</span>;<br> *(_DWORD *)&amp;v13[<span class="hljs-number">4</span>] = <span class="hljs-number">0xAF59ADF6</span>; <br> *(_DWORD *)&amp;v13[<span class="hljs-number">8</span>] = <span class="hljs-number">0x237D6074</span>;<br> *(_DWORD *)&amp;v13[<span class="hljs-number">12</span>] = <span class="hljs-number">0x3AD86E16</span>;<br> *(_DWORD *)&amp;v13[<span class="hljs-number">16</span>] = <span class="hljs-number">0x7B8D5C66</span>;<br> v13[<span class="hljs-number">20</span>] = <span class="hljs-number">-0x2A</span>;<br> v14 = <span class="hljs-number">0</span>;<br> v15 = <span class="hljs-number">0</span>;<br> v4 = <span class="hljs-built_in">strlen</span>(v13);<br> <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span>  i = <span class="hljs-number">0</span>; i &lt; v4; ++i )<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>,__ROR1__(v13[i], i &amp; <span class="hljs-number">7</span>));<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-comment">//welcome_t0_dasctf.com</span><br></code></pre></td></tr></table></figure><p>然而不对…跟进这个<code>gethostbyname</code>的API中，发现有一个奇奇怪怪的交叉引用</p><p><img src="/2023/07/11/DAS%E4%BA%94%E6%9C%88%E8%B5%9B-REV//image-20230711220837535.png"></p><p>其实如果只是要flag的话这题到这就已经出了，但是这里的API hook可以看看</p><p>在<code>__scrt_common_main_seh</code>函数中有着一段在main函数执行前的操作</p><p><img src="/2023/07/11/DAS%E4%BA%94%E6%9C%88%E8%B5%9B-REV//image-20230711215006796.png"></p><p><img src="/2023/07/11/DAS%E4%BA%94%E6%9C%88%E8%B5%9B-REV//image-20230711215026206.png" alt="init_term"></p><p>其中第二个函数将一个data段的变量置为了指向<code>gethostbyname</code>这个API的函数指针</p><p><img src="/2023/07/11/DAS%E4%BA%94%E6%9C%88%E8%B5%9B-REV//image-20230711215154478.png"></p><p>第三个函数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-type">void</span> __stdcall <span class="hljs-title">sub_8B1010</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>  <span class="hljs-type">char</span> *v0; <span class="hljs-comment">// edx</span><br>  DWORD flOldProtect; <span class="hljs-comment">// [esp+4h] [ebp-4h] BYREF</span><br>    <br>  <span class="hljs-built_in">VirtualProtect</span>(lpAddress, <span class="hljs-number">5u</span>, <span class="hljs-number">0x40</span>u, &amp;flOldProtect);<br>  v0 = (<span class="hljs-type">char</span> *)lpAddress;<span class="hljs-comment">//v0 -&gt; gethostbyname</span><br>    <br>  dword_8B4374 = *(_DWORD *)lpAddress;<br>  byte_8B4378 = *((_BYTE *)lpAddress + <span class="hljs-number">4</span>);<span class="hljs-comment">//暂存函数开头的五个字节</span><br>    <br>  *(_DWORD *)lpAddress = *(_DWORD *)sub_8B10C0;<br>  *v0 = <span class="hljs-number">-23</span>;<span class="hljs-comment">//0xE9 -&gt; jmp</span><br>  *(_DWORD *)(v0 + <span class="hljs-number">1</span>) = (<span class="hljs-type">char</span> *)sub_8B10C0 - (<span class="hljs-type">char</span> *)gethostbyname - <span class="hljs-number">5</span>;<span class="hljs-comment">//当EIP指向gethostbyname时，执行该jmp，跳转到sub_8B10C0执行，-5对应本条指令长度</span><br>    <br>  <span class="hljs-built_in">VirtualProtect</span>(v0, <span class="hljs-number">5u</span>, flOldProtect, &amp;flOldProtect);<br>&#125;<br></code></pre></td></tr></table></figure><p>其实如果对学期刚开始的时候的西湖论剑那道heaven‘s gate有印象的话，看到末尾这个对于v0的操作已经可以看出来是构造了一个inline hook了。可以对照上面的注释详细拆解一下整个流程。</p><p>于是乎在第一次调用这个API的时候，会使得程序跳转到<code>sub_8B10C0</code>执行，且在后者的开头重新复原了这个API原来的结构，因此在后续调用该api的时候并不会对<code>name</code>进行操作。</p><h3 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs python">s = <span class="hljs-string">&quot;welcome_t0_dasctf.com&quot;</span><br>a1 = [<span class="hljs-built_in">ord</span>(x) <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> s]<br>name = [<span class="hljs-number">0</span>]*<span class="hljs-number">21</span><br>name[<span class="hljs-number">0</span>] = a1[<span class="hljs-number">0</span>] ^ <span class="hljs-number">0x3D</span><br>name[<span class="hljs-number">1</span>] = a1[<span class="hljs-number">1</span>] ^ <span class="hljs-number">0x10</span><br>name[<span class="hljs-number">2</span>] = a1[<span class="hljs-number">2</span>] ^ <span class="hljs-number">0x1F</span><br>name[<span class="hljs-number">3</span>] = a1[<span class="hljs-number">3</span>] ^ <span class="hljs-number">0x17</span><br>name[<span class="hljs-number">4</span>] = a1[<span class="hljs-number">4</span>] ^ <span class="hljs-number">0x30</span><br>name[<span class="hljs-number">5</span>] = a1[<span class="hljs-number">5</span>] ^ <span class="hljs-number">0x2C</span><br>name[<span class="hljs-number">6</span>] = a1[<span class="hljs-number">6</span>] ^ <span class="hljs-number">0xB</span><br>name[<span class="hljs-number">7</span>] = a1[<span class="hljs-number">7</span>]<br>name[<span class="hljs-number">8</span>] = a1[<span class="hljs-number">8</span>] ^ <span class="hljs-number">0x35</span><br>name[<span class="hljs-number">9</span>] = a1[<span class="hljs-number">9</span>] ^ <span class="hljs-number">0x60</span><br>name[<span class="hljs-number">10</span>] = a1[<span class="hljs-number">10</span>] ^ <span class="hljs-number">0x16</span><br>name[<span class="hljs-number">11</span>] = a1[<span class="hljs-number">11</span>] ^ <span class="hljs-number">0x2C</span><br>name[<span class="hljs-number">12</span>] = a1[<span class="hljs-number">12</span>] ^ <span class="hljs-number">0x51</span><br>name[<span class="hljs-number">13</span>] = a1[<span class="hljs-number">13</span>] ^ <span class="hljs-number">0x43</span><br>name[<span class="hljs-number">14</span>] = a1[<span class="hljs-number">14</span>] ^ <span class="hljs-number">8</span><br>name[<span class="hljs-number">15</span>] = a1[<span class="hljs-number">15</span>] ^ <span class="hljs-number">0x45</span><br>name[<span class="hljs-number">16</span>] = a1[<span class="hljs-number">16</span>] ^ <span class="hljs-number">0x57</span><br>name[<span class="hljs-number">17</span>] = a1[<span class="hljs-number">17</span>]<br>name[<span class="hljs-number">18</span>] = a1[<span class="hljs-number">18</span>]<br>name[<span class="hljs-number">19</span>] = a1[<span class="hljs-number">19</span>]<br>name[<span class="hljs-number">20</span>] = a1[<span class="hljs-number">20</span>]<br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> name:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(x),end=<span class="hljs-string">&#x27;&#x27;</span>)<br><span class="hljs-comment">#Just_An_APIH00k11.com</span><br></code></pre></td></tr></table></figure><p>P.S. 由于开了ASLR所以ida加载的时候函数地址可能不同，看后三位即可</p><h2 id="babyre"><a href="#babyre" class="headerlink" title="babyre"></a>babyre</h2><blockquote><p>这就是PE文件格式给我的自信！</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>组会分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hook</tag>
      
      <tag>junk-code</tag>
      
      <tag>RC4</tag>
      
      <tag>RSA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023CISCN-pwsh</title>
    <link href="/2023/06/19/2023CISCN-pwsh/"/>
    <url>/2023/06/19/2023CISCN-pwsh/</url>
    
    <content type="html"><![CDATA[<h3 id="pwsh"><a href="#pwsh" class="headerlink" title="pwsh"></a>pwsh</h3><p>​观察一下文件，是一个base64编码过的pwsh脚本，由于通过管道作为<code>iex</code>执行的内容，直接去除<code>| iex</code>后运行获取输出。</p><p><img src="/2023/06/19/2023CISCN-pwsh//FirstGlance.png"></p><p>​输出后的文件的末尾可以发现我们的输入经过了这样的处理：将输入的内容以字节流的形式分割，逐位取前四位和后四位。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$t</span>=<span class="hljs-built_in">Read-Host</span> <span class="hljs-literal">-Prompt</span> <span class="hljs-string">&quot;Enter your flag&quot;</span>;<br>[<span class="hljs-type">System.Collections.Queue</span>]<span class="hljs-variable">$tt</span>=([<span class="hljs-built_in">byte</span>[]][<span class="hljs-built_in">char</span>[]]<span class="hljs-variable">$t</span>|%&#123;<span class="hljs-variable">$_</span> <span class="hljs-operator">-shr</span> <span class="hljs-number">4</span>;<span class="hljs-variable">$_</span>%<span class="hljs-number">16</span>&#125;);<br><span class="hljs-built_in">iex</span>(<span class="hljs-variable">$M</span>[<span class="hljs-number">129693309641433576095262078804193086780</span>])<br></code></pre></td></tr></table></figure><p><img src="/2023/06/19/2023CISCN-pwsh//TestInput.png"></p><p>​在这个文件的上方则定义了一个巨大的map，在经过输入之后会以字符串的形式解析<code>$M[129693309641433576095262078804193086780]</code>并执行。可以将所有在M定义完成后的语句全部注释，输出一下M的内容。然后将M中的内容按照key.ps1：value的方式保存一下</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$M</span>.Keys| % &#123; <span class="hljs-variable">$M</span>[<span class="hljs-variable">$_</span>]|<span class="hljs-built_in">Out-File</span> <span class="hljs-string">&quot;M/<span class="hljs-variable">$</span>&#123;_&#125;.ps1&quot;</span> &#125;<br></code></pre></td></tr></table></figure><p>​接下来看看<code>iex($M[129693309641433576095262078804193086780])</code>干了什么：</p><p>​简单按照管道符和分号分隔一下可以发现它由四段b64编码的deflate流组成，并且通过例如<code>( $sHElLId[1]+$Shellid[13]+&quot;X&quot;)</code>的形式构造了<code>iex</code>，并将前者的输出通过管道输入到<code>iex</code>中执行。考虑到<code>iex</code>是将字符串作为输入执行的，我们可以直接提取出四段字符串的内容。</p><p>​在每个脚本中，我们同样可以发现类似的构造iex的方法，这里以第一段为例：</p><p><img src="/2023/06/19/2023CISCN-pwsh//Example.png"></p><p>​根据前面的分析，我们可以将这行生成<code>iex</code>的命令注释，执行这个ps1获取输出。</p><p><img src="/2023/06/19/2023CISCN-pwsh//Output.png"></p><p>​一样的<code>iex</code>执行命令，这边不再演示，直接解到最后一层：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs powershell">.(<span class="hljs-string">&quot;&#123;1&#125;&#123;0&#125;&quot;</span><span class="hljs-operator">-f</span> <span class="hljs-string">&#x27;t&#x27;</span>,<span class="hljs-string">&#x27;Se&#x27;</span>) (<span class="hljs-string">&quot;ye4x2&quot;</span>+<span class="hljs-string">&quot;v&quot;</span>)  (  [<span class="hljs-type">tYpE</span>](<span class="hljs-string">&quot;&#123;0&#125;&#123;1&#125;&#123;3&#125;&#123;2&#125;&quot;</span> <span class="hljs-operator">-F</span><span class="hljs-string">&#x27;SYStem&#x27;</span>,<span class="hljs-string">&#x27;.&#x27;</span>,<span class="hljs-string">&#x27;T&#x27;</span>,<span class="hljs-string">&#x27;COnVEr&#x27;</span>))  ;  <br>.(<span class="hljs-string">&quot;&#123;1&#125;&#123;0&#125;&#123;2&#125;&quot;</span> <span class="hljs-operator">-f</span> <span class="hljs-string">&#x27;T&#x27;</span>,<span class="hljs-string">&#x27;se&#x27;</span>,<span class="hljs-string">&#x27;-itEm&#x27;</span>) (<span class="hljs-string">&quot;&#123;2&#125;&#123;0&#125;&#123;3&#125;&#123;4&#125;&#123;1&#125;&quot;</span> <span class="hljs-operator">-f</span> <span class="hljs-string">&#x27;I&#x27;</span>,<span class="hljs-string">&#x27;Q&#x27;</span>,<span class="hljs-string">&#x27;VAR&#x27;</span>,<span class="hljs-string">&#x27;aBLE:&#x27;</span>,<span class="hljs-string">&#x27;9cg8m&#x27;</span>)  ( [<span class="hljs-type">tYPe</span>](<span class="hljs-string">&quot;&#123;3&#125;&#123;0&#125;&#123;2&#125;&#123;1&#125;&quot;</span><span class="hljs-operator">-F</span><span class="hljs-string">&#x27;sTEM.&#x27;</span>,<span class="hljs-string">&#x27;COdinG&#x27;</span>,<span class="hljs-string">&#x27;teXT.eN&#x27;</span>,<span class="hljs-string">&#x27;SY&#x27;</span>))  ;  <br><span class="hljs-variable">$</span>&#123;bBb`BB&#125;=  <span class="hljs-variable">$Ye4x2V::</span>(<span class="hljs-string">&quot;&#123;3&#125;&#123;4&#125;&#123;1&#125;&#123;2&#125;&#123;0&#125;&quot;</span> <span class="hljs-operator">-f</span> <span class="hljs-string">&#x27;ng&#x27;</span>,<span class="hljs-string">&#x27;Base6&#x27;</span>,<span class="hljs-string">&#x27;4Stri&#x27;</span>,<span class="hljs-string">&#x27;Fr&#x27;</span>,<span class="hljs-string">&#x27;om&#x27;</span>).Invoke((<span class="hljs-string">&quot;&#123;16&#125;&#123;7&#125;&#123;15&#125;&#123;2&#125;&#123;14&#125;&#123;10&#125;&#123;12&#125;&#123;0&#125;&#123;4&#125;&#123;1&#125;&#123;6&#125;&#123;3&#125;&#123;13&#125;&#123;8&#125;&#123;17&#125;&#123;18&#125;&#123;9&#125;&#123;5&#125;&#123;11&#125;&quot;</span><span class="hljs-operator">-f</span><span class="hljs-string">&#x27;yF&#x27;</span>,<span class="hljs-string">&#x27;XOhd&#x27;</span>,<span class="hljs-string">&#x27;chd2F3&#x27;</span>,<span class="hljs-string">&#x27;dlF&#x27;</span>,<span class="hljs-string">&#x27;3oXeBdhF3I&#x27;</span>,<span class="hljs-string">&#x27;XYx&#x27;</span>,<span class="hljs-string">&#x27;HF0QXVR&#x27;</span>,<span class="hljs-string">&#x27;QF3IXYxc6F0cXRBdV&#x27;</span>,<span class="hljs-string">&#x27;F2cXe&#x27;</span>,<span class="hljs-string">&#x27;k&#x27;</span>,<span class="hljs-string">&#x27;Zxd4F34XeRdjF2&#x27;</span>,<span class="hljs-string">&#x27;c+FywX&#x27;</span>,<span class="hljs-string">&#x27;sXRRd&#x27;</span>,<span class="hljs-string">&#x27;3IXdhd8&#x27;</span>,<span class="hljs-string">&#x27;wX&#x27;</span>,<span class="hljs-string">&#x27;F2UX&#x27;</span>,<span class="hljs-string">&#x27;Pxd&#x27;</span>,<span class="hljs-string">&#x27;Bd+F&#x27;</span>,<span class="hljs-string">&#x27;3&#x27;</span>));<br><span class="hljs-keyword">for</span>(<span class="hljs-variable">$</span>&#123;I`iI`ii&#125;=<span class="hljs-number">0</span>;<span class="hljs-variable">$</span>&#123;I`ii`Ii&#125; <span class="hljs-operator">-lt</span> <span class="hljs-variable">$</span>&#123;Bb`B`BB&#125;.<span class="hljs-string">&quot;COU`NT&quot;</span>;<span class="hljs-variable">$</span>&#123;<span class="hljs-built_in">II</span>`I<span class="hljs-built_in">ii</span>&#125;++)<br>&#123;<span class="hljs-variable">$</span>&#123;BbBbB&#125;[<span class="hljs-variable">$</span>&#123;<span class="hljs-type">iIiIi</span>&#125;]=<span class="hljs-variable">$</span>&#123;BbBbB&#125;[<span class="hljs-variable">$</span>&#123;<span class="hljs-type">iIiIi</span>&#125;] <span class="hljs-operator">-bxor</span> <span class="hljs-number">23</span>&#125;;<br>&amp;(<span class="hljs-string">&quot;&#123;1&#125;&#123;0&#125;&quot;</span> <span class="hljs-operator">-f</span><span class="hljs-string">&#x27;EX&#x27;</span>,<span class="hljs-string">&#x27;I&#x27;</span>) ( (  &amp;(<span class="hljs-string">&quot;&#123;1&#125;&#123;0&#125;&quot;</span> <span class="hljs-operator">-f</span><span class="hljs-string">&#x27;r&#x27;</span>,<span class="hljs-string">&#x27;DI&#x27;</span>)  (<span class="hljs-string">&quot;&#123;3&#125;&#123;2&#125;&#123;1&#125;&#123;0&#125;&quot;</span> <span class="hljs-operator">-f</span> <span class="hljs-string">&#x27;mQ&#x27;</span>,<span class="hljs-string">&#x27;ble:9cG8&#x27;</span>,<span class="hljs-string">&#x27;aRIa&#x27;</span>,<span class="hljs-string">&#x27;v&#x27;</span>)).<span class="hljs-string">&quot;v`AluE&quot;</span>::<span class="hljs-string">&quot;UNi`COdE&quot;</span>.<span class="hljs-string">&quot;GEtstri`NG&quot;</span>(<span class="hljs-variable">$</span>&#123;B`BBBB&#125;));<br></code></pre></td></tr></table></figure><p>​同样的逻辑，通过将<code>.iex</code>语句注释并执行脚本，我们将上述代码转化为<code>(Get-PSBreakpoint|Remove-PSBreakpoint);</code>。</p><p>​至此，我们完成了对于M中的第一个元素的第一段内容的分析，考虑到M中共有256个元素且每个元素都可能包含像这样的四段，人工解想必是不可能的。先通过脚本解base64：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs powershell">mkdir <span class="hljs-string">&#x27;../base64deflate&#x27;</span><br><span class="hljs-built_in">gci</span> ../M/*.ps1 | % &#123;<br><span class="hljs-variable">$base</span>=<span class="hljs-variable">$_</span>.BaseName<br><span class="hljs-variable">$i</span>=<span class="hljs-number">0</span><br><span class="hljs-built_in">gc</span> <span class="hljs-literal">-raw</span> <span class="hljs-variable">$_</span><br>| <span class="hljs-built_in">Select-String</span> <span class="hljs-literal">-Pattern</span> <span class="hljs-string">&#x27;([a-zA-Z0-9+/=]+)&#x27;</span> <span class="hljs-literal">-AllMatches</span> <br>| % &#123; <span class="hljs-variable">$_</span>.Matches.Value&#125;<br>| ? &#123; <span class="hljs-variable">$_</span>.Length <span class="hljs-operator">-gt</span> <span class="hljs-number">50</span> &#125;<br>| % &#123;<br><span class="hljs-built_in">New-Object</span> System.IO.Compression.DeflateStream([<span class="hljs-type">System.IO.MemoryStream</span>][<span class="hljs-type">System.Convert</span>]::FromBase64String(<span class="hljs-variable">$_</span>), [<span class="hljs-type">System.IO.Compression.CompressionMode</span>]::Decompress)<br>| % &#123; (<span class="hljs-built_in">New-Object</span> System.IO.StreamReader(<span class="hljs-variable">$_</span>, [<span class="hljs-type">System.Text.Encoding</span>]::Ascii)).ReadToEnd() |<span class="hljs-built_in">Out-File</span> <span class="hljs-literal">-LiteralPath</span> ../base64deflate/<span class="hljs-variable">$</span>&#123;base&#125;.<span class="hljs-variable">$</span>&#123;i&#125;.ps1;<span class="hljs-variable">$i</span>++ &#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>解完第一层的base64之后我们该如何通过脚本实现识别<code>iex</code>输出其执行的内容呢？考虑到<code>iex</code>是<code>Invoke-Expression</code>的别名，这里采用了将<code>Invoke-Expression</code>强行设定为<code>Write-Output</code>的别名，实现将每个经过<code>iex</code>执行的命令进行输出。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs powershell">mkdir <span class="hljs-string">&#x27;../hook_iex&#x27;</span><br><span class="hljs-built_in">Set-Alias</span> <span class="hljs-built_in">Invoke-Expression</span> <span class="hljs-built_in">Write-Output</span> <span class="hljs-literal">-Force</span><br><span class="hljs-built_in">Get-ChildItem</span> ../base64deflate/*.ps1|<span class="hljs-built_in">ForEach-Object</span>&#123;<br><span class="hljs-variable">$base</span> = <span class="hljs-variable">$_</span>.BaseName<br>. <span class="hljs-variable">$_</span>|<span class="hljs-built_in">Out-File</span> <span class="hljs-string">&quot;../hook_iex/<span class="hljs-variable">$</span>&#123;base&#125;.ps1&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>实际过程中由于环境变量的原因，需要windows自带的powershell才能跑，后来下载的powershell7跑不了。</p><p><img src="/2023/06/19/2023CISCN-pwsh//PSVersion.png"></p><p>查看处理过后的文件，虽然可读性增强了但是好像还是没有将<code>iex</code>处理完，重新写个脚本：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">Set-Alias</span> <span class="hljs-built_in">Invoke-Expression</span> <span class="hljs-built_in">Write-Output</span> <span class="hljs-literal">-Force</span><br><span class="hljs-built_in">Get-ChildItem</span> <span class="hljs-string">&#x27;../hook_iex/*.ps1&#x27;</span> | <span class="hljs-built_in">ForEach-Object</span> &#123;<br><span class="hljs-keyword">while</span> (<span class="hljs-variable">$true</span>) &#123;<br><span class="hljs-variable">$str</span> = <span class="hljs-built_in">Get-Content</span> <span class="hljs-literal">-Raw</span> <span class="hljs-variable">$_</span><br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$str</span>.Length <span class="hljs-operator">-gt</span> <span class="hljs-number">250</span> <span class="hljs-operator">-and</span> !<span class="hljs-variable">$str</span>.Contains(<span class="hljs-string">&#x27;$M[@&#x27;</span>))&#123;<br><span class="hljs-variable">$str</span> = . <span class="hljs-variable">$_</span><br><span class="hljs-variable">$str</span>|<span class="hljs-built_in">Out-File</span> <span class="hljs-literal">-LiteralPath</span> <span class="hljs-variable">$_</span>.FullName<br>&#125;<span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>可以看到所有脚本解混淆完毕，想起来M[0]的最后一段解出来是一个跳转，通过脚本取出所有包含以下格式的跳转表：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">iex</span>(<span class="hljs-variable">$M</span>[<span class="hljs-selector-tag">@</span>(<span class="hljs-number">105225267615381060379688514026974097864</span>,<br>    <span class="hljs-number">75396876044010357249315347176054192827</span>,<br>    <span class="hljs-number">217884439154847279774382839120263235923</span>,<br>    <span class="hljs-number">318661709067837555752929246722302823577</span>,<br>    <span class="hljs-number">19509760675443473229857571785488748754</span>,<br>    <span class="hljs-number">95745558884563686294601919894186373869</span>,<br>    <span class="hljs-number">206056027555959552539845030517210519978</span>,<br>    <span class="hljs-number">257504143117775831544168949607913977327</span>,<br>    <span class="hljs-number">74086437729404709013030235583044679340</span>,<br>    <span class="hljs-number">22937617477989053507015679147587112829</span>,<br>    <span class="hljs-number">181548514877102649222891676127414255428</span>,<br>    <span class="hljs-number">98749683482414452357531156779313217754</span>,<br>    <span class="hljs-number">8045107407088715149482582297175403241</span>,<br>    <span class="hljs-number">139350468289394680810766340324930767905</span>,<br>    <span class="hljs-number">310045750820067986473820567207839601380</span>,<br>    <span class="hljs-number">181548514877102649222891676127414255428</span>)<br>    [<span class="hljs-variable">$tt</span><span class="hljs-type">.Dequeue</span>()]]);<br></code></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs powershell">mkdir <span class="hljs-string">&#x27;../tables&#x27;</span><br><span class="hljs-built_in">Get-ChildItem</span> <span class="hljs-string">&#x27;../hook_iex/*.ps1&#x27;</span> | <span class="hljs-built_in">ForEach-Object</span> &#123;<br><span class="hljs-variable">$name</span>=<span class="hljs-variable">$_</span>.Name<br><span class="hljs-built_in">Write-Output</span> <span class="hljs-variable">$_</span>.FullName<br><span class="hljs-variable">$str</span> = <span class="hljs-built_in">Get-Content</span> <span class="hljs-literal">-Raw</span> <span class="hljs-variable">$_</span><br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$str</span>.Contains(<span class="hljs-string">&#x27;$M[@&#x27;</span>))&#123;<br><span class="hljs-variable">$str</span>|<span class="hljs-built_in">Out-File</span> <span class="hljs-literal">-LiteralPath</span> <span class="hljs-string">&quot;../tables/<span class="hljs-variable">$</span>&#123;name&#125;&quot;</span><br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>在vscode中<code>ctrl+shift+f</code>搜索一下flag即可找到提示flag正确的字样。</p><p><img src="/2023/06/19/2023CISCN-pwsh//target.png" alt="你藏的挺深啊.jpg"></p><p>接着就是基于上文提到的每个部分的跳转表，根据入口和出口找到联通的路径：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> os<br><br>path = <span class="hljs-string">&#x27;./tables&#x27;</span><br>l = os.listdir(path)<br>M = &#123;&#125;<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">extract</span>(<span class="hljs-params">p</span>):<br>_ = path+<span class="hljs-string">&#x27;/&#x27;</span>+p<br>f = <span class="hljs-built_in">open</span>(_,<span class="hljs-string">&#x27;rb&#x27;</span>)<br>l = f.read().decode(<span class="hljs-string">&#x27;utf-16le&#x27;</span>)<br>lists = l[l.find(<span class="hljs-string">&#x27;@&#x27;</span>)+<span class="hljs-number">2</span>:l.find(<span class="hljs-string">&#x27;)&#x27;</span>)].split(<span class="hljs-string">&#x27;,&#x27;</span>)<br>n = p[:p.find(<span class="hljs-string">&#x27;E&#x27;</span>)]<br>M.update(&#123;<span class="hljs-built_in">str</span>(n):[<span class="hljs-built_in">int</span>(x) <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> lists]&#125;)<br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> l:<br>extract(x)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">ezSerach</span>(<span class="hljs-params">s</span>):<br>    tmpRes = []<br>    tmpHd = []<br>    <span class="hljs-keyword">for</span> hd <span class="hljs-keyword">in</span> M.keys():<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> hd <span class="hljs-keyword">in</span> posFlag.keys():<br>            <span class="hljs-keyword">for</span> it <span class="hljs-keyword">in</span> M[hd]:<br>                tmp = (<span class="hljs-built_in">str</span>(it))[:<span class="hljs-number">13</span>]<br>                <span class="hljs-keyword">if</span>(tmp == s):<br>                    tmpHd.append(hd)<br>                    tmpRes.append(M[hd].index(it))<br>    <span class="hljs-keyword">return</span> (tmpHd, tmpRes)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    beg = <span class="hljs-string">&quot;1.29693309641434&quot;</span><br>    end = <span class="hljs-string">&quot;9.39202168950155&quot;</span><br>    cur = end<br>    path1 = []<br>    posFlag = &#123;&#125;<br>    newM = <span class="hljs-built_in">list</span>(M.keys())<br>    <span class="hljs-keyword">while</span>(cur != beg):<br>        posFlag[cur] = <span class="hljs-number">1</span><br>        ck = cur.replace(<span class="hljs-string">&quot;.&quot;</span>, <span class="hljs-string">&quot;&quot;</span>)<br>        ck = ck[:<span class="hljs-number">13</span>]<br>        cur, vals = ezSerach(ck)<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">len</span>(cur)&gt;<span class="hljs-number">1</span>):<br>            <span class="hljs-built_in">print</span>(cur)<br>            <span class="hljs-built_in">print</span>(vals)<br>        cur = cur[<span class="hljs-number">0</span>]<br>        vals = vals[<span class="hljs-number">0</span>]<br>        path1.append(vals)<br>    path1.reverse()<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(path1),<span class="hljs-number">2</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(path1[i]*<span class="hljs-number">16</span>+path1[i+<span class="hljs-number">1</span>]),end=<span class="hljs-string">&#x27;&#x27;</span>)<br><span class="hljs-comment">#flag&#123;e222e1ac-7f90-49ec-a4ae-ccbbd7aec836&#125;</span><br></code></pre></td></tr></table></figure><p>目录结构：<img src="/2023/06/19/2023CISCN-pwsh//Structure.png"></p><p>P.S. <code>Windows Powershell</code>的<code>ForEach-Object</code>没有并行，真不是人用的！</p>]]></content>
    
    
    <categories>
      
      <category>赛后解</category>
      
    </categories>
    
    
    <tags>
      
      <tag>解混淆</tag>
      
      <tag>hook</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2023西湖论剑-DualPersonality</title>
    <link href="/2023/06/19/2023%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91-DualPersonality/"/>
    <url>/2023/06/19/2023%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91-DualPersonality/</url>
    
    <content type="html"><![CDATA[<h3 id="Dual-Personality"><a href="#Dual-Personality" class="headerlink" title="Dual Personality"></a>Dual Personality</h3><h4 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h4><blockquote><p>  ​天堂之门(heaven’s gate)</p><p>  ​简单的反调试</p></blockquote><h4 id="程序流程"><a href="#程序流程" class="headerlink" title="程序流程"></a>程序流程</h4><blockquote><p>start -&gt; scrt_common_main -&gt; scrt_common_main_seh -&gt; invoke_main -&gt;  main</p></blockquote><p>进入main函数发现无法f5，遂看汇编</p><p><img src="/2023/06/19/2023%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91-DualPersonality//F5.png"></p><p>根据相关压栈操作猜测scanf函数和input输入地址。</p><p>sub_401120:</p><p><img src="/2023/06/19/2023%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91-DualPersonality//sub_401120.png"></p><p>传进的参数根据cdecl的方式可以判定a2是dword_4011D0，Size为7</p><p><a href="https://learn.microsoft.com/zh-cn/windows/win32/api/memoryapi/nf-memoryapi-virtualalloc">virtualAlloc 函数 (memoryapi.h) - Win32 apps | Microsoft Learn</a></p><p>VirtualAlloc函数可以参考如上手册，这里利用了这个函数改变了407050地址处的内存，memcpy将返回地址处的指令存储到407050处。</p><p>关于v2实现了怎么样的跳转？</p><blockquote><p>0xe9是jmp rel32,相当于EIP +&#x3D; rel32。jmp rel32占5个字节，x86架构EIP自然指向下一条指令<br>那么在执行这个jmp rel32的时候，EIP &#x3D; v2 + 5，上面的式子中，rel32 &#x3D; (retaddr + a1) - v2- 5 &#x3D; (retaddr + a1) - v2 - 5<br>所以执行完这个jmp, EIP&#x3D; v2 + 5 + (retaddr + a1)-v2- 5 &#x3D; retaddr + a1，也就刚刚好是回到原来被拷贝走的代码之后</p></blockquote><p>而利用retaddr非常巧妙地构造了一个跳转:</p><table><thead><tr><th>addr</th><th>code</th></tr></thead><tbody><tr><td>retaddr0</td><td>0xEA</td></tr><tr><td>retaddr1</td><td>0xD0</td></tr><tr><td>retaddr2</td><td>0x10</td></tr><tr><td>retaddr3</td><td>0x40</td></tr><tr><td>retaddr4</td><td>0x00</td></tr><tr><td>retaddr5</td><td>0x33</td></tr><tr><td>retaddr6</td><td>0x00</td></tr></tbody></table><p>也就是在返回地址处写入了0xEAD01040003300</p><p>pwntools可以解析这个机器码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs assembly">pwn disasm &#x27;EAD01040003300&#x27;<br>0:    ea d0 10 40 00 33 00     jmp    0x33:0x4011d0<br></code></pre></td></tr></table></figure><p>需要注意的是，这边的jmp far是通过基地址+偏移地址的方式进行跳转的，这个跳转的实现使得cs寄存器变为0x33，eip寄存器变为0x4010d0，利用cs:eip使得程序继续执行。至此，这个32位程序开始运行64位的机器码，即传入的第二个参数int a2处的机器码。该技术也被称之为天堂之门(heaven’s gate)。事实上，天堂之门的技术完全是由硬件实现的，通过修改cs寄存器的值使得cpu能够切换运行模式。但是值得注意的是windows调度cpu或者保护现场类似的操作还是由软件完成的。</p><p>天堂之门的相关技术介绍：</p><p>底层原理<a href="https://www.malwaretech.com/2014/02/the-0x33-segment-selector-heavens-gate.html">The 0x33 Segment Selector (Heavens Gate) (malwaretech.com)</a></p><p>windows协调cpu[<a href="https://bbs.kanxue.com/thread-270153.htm">原创]天堂之门 (Heaven’s Gate) C语言实现-软件逆向-看雪论坛-安全社区|安全招聘|bbs.pediy.com (kanxue.com)</a></p><p>综上，sub_401120可以被视为一个进入天堂之门的操作，先mark一下，更名为x32to64。</p><p>对于该函数第一次调用进行分析，发现程序接下来会以x64模式执行0x4010d0处的shellcode，因此双击查看4010d0处内容，将其设置为长度为一个字节的数组。shift+e导出数组，按照64位机器码进行分析。  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs assembly"> 0:    65 48 8b 04 25 60 00 00 00       mov    rax,  QWORD PTR gs:0x60<br> 9:    8a 40 02                 mov    al,  BYTE PTR [rax+0x2]<br> c:    88 04 25 5c 70 40 00     mov    BYTE PTR ds:0x40705c,  al<br>13:    84 c0                    test   al,  al<br>15:    75 0e                    jne    0x25<br>17:    41 bc ae 66 f9 5d        mov    r12d,  0x5df966ae<br>1d:    44 89 24 25 58 70 40 00          mov    DWORD PTR ds:0x407058,  r12d<br>25:    44 b8 00 70 40 00        rex.R mov eax,  0x407000 ;rex.R/W/X/B的介绍https://wiki.osdev.org/X86-64_Instruction_Encoding#REX_prefix<br>2b:    48 ff 28                 rex.W jmp FWORD PTR [rax];在这里置eax就可以将rax高位全部清零，FWORD对应five word，即取了407000开始的十个字节<br>2e:    cc                       int3 ;具体跳转方式见https://www.felixcloutier.com/x86/jmp<br>2f:    cc                       int3 ;通过ida查看内存可以发现cs寄存器取WORD PTR [407008]即0x23<br>     ;rip寄存器的值为DWORD PTR[407000]，即在401120函数中申请的407050指向的内存区域。<br>      ;至此，CPU从x64模式再次切换为x32模式，并且回到了先前保存的x32模式下的返回地址处的指令 <br></code></pre></td></tr></table></figure><p>​需要注意的是这段代码的第一行，QWORD PTR GS:[0x60]以四字的形式读取了GS:0x60处的内容，查阅相关文档可以了解到在x64模式下，这里存放的是PEB(process environment block) </p><p>关于PEB的详细介绍可以看<a href="https://en.wikipedia.org/wiki/Process_Environment_Block">https://en.wikipedia.org/wiki/Process_Environment_Block</a></p><p>微软官方给出了PEB结构体的具体实现：<a href="https://learn.microsoft.com/en-us/windows/win32/api/winternl/ns-winternl-peb">https://learn.microsoft.com/en-us/windows/win32/api/winternl/ns-winternl-peb</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">typedef</span> <span class="hljs-keyword">struct</span> <span class="hljs-title class_">_PEB</span> &#123;<br>  BYTE                          Reserved1[<span class="hljs-number">2</span>];<br>  BYTE                          BeingDebugged;<br>  BYTE                          Reserved2[<span class="hljs-number">1</span>];<br>  PVOID                         Reserved3[<span class="hljs-number">2</span>];<br>  PPEB_LDR_DATA                 Ldr;<br>  PRTL_USER_PROCESS_PARAMETERS  ProcessParameters;<br>  PVOID                         Reserved4[<span class="hljs-number">3</span>];<br>  PVOID                         AtlThunkSListPtr;<br>  PVOID                         Reserved5;<br>  ULONG                         Reserved6;<br>  PVOID                         Reserved7;<br>  ULONG                         Reserved8;<br>  ULONG                         AtlThunkSListPtr32;<br>  PVOID                         Reserved9[<span class="hljs-number">45</span>];<br>  BYTE                          Reserved10[<span class="hljs-number">96</span>];<br>  PPS_POST_PROCESS_INIT_ROUTINE PostProcessInitRoutine;<br>  BYTE                          Reserved11[<span class="hljs-number">128</span>];<br>  PVOID                         Reserved12[<span class="hljs-number">1</span>];<br>  ULONG                         SessionId;<br>&#125; PEB, *PPEB;<br></code></pre></td></tr></table></figure><p>因此上面得到的汇编代码中 MOV AL,BYTE PTR [RAX+02] 正好读取了PEB中的调试标志位。如果程序正在被调试，则置40705C为1</p><p>之后执行的逻辑按照汇编代码的注释可以自行理解，大意上就是如果调试标志位不是1就将0x407058的内存空间初始化为0x5df966ae，反之则不进行初始化，默认为0。</p><p>第一次出门之后的操作：</p><p><img src="/2023/06/19/2023%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91-DualPersonality//FirstOut.png"></p><p>将0x407058的内存空间减去0x21524111，在调试状态下未初始化的内存空间0x100000000-0x21524111 &#x3D; 0xdeadbeef ，如果知道这个Magic Number的含义可能能够更容易地发现存在反调试。程序正常运行时此处的值为0x3ca7259d。而后利用栈帧存储输入的内存，跳转到401417，看一遍汇编可以得出如下加密逻辑：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span> ;i &lt; <span class="hljs-number">8</span> ;i++)&#123;<br>    __int64 a = <span class="hljs-number">0x3ca7259d</span>;<br>input[i]+= a;<br>a = a^input[i];<br>&#125;<br></code></pre></td></tr></table></figure><p>之后的程序逻辑如下：</p><p><img src="/2023/06/19/2023%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91-DualPersonality//then.png"></p><p>通过call fword的方式完成了函数的执行：fword的解析方式同之前汇编描述的一样，这个call语句使程序跳转到0x401200处以x64模式执行函数。同样将对应内存进行一波反汇编</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs assembly"> 0:    55                       push   rbp<br> 1:    48 8b ec                 mov    rbp,  rsp<br> 4:    a0 5c 70 40 00 00 00 00 00       movabs al,  ds:0x40705c<br> d:    84 c0                    test   al,  al<br> f:    74 34                    je     0x45<br>11:    48 8b 45 10              mov    rax,  QWORD PTR [rbp+0x10]<br>15:    48 8b 18                 mov    rbx,  QWORD PTR [rax]<br>18:    48 c1 c3 20              rol    rbx,  0x20<br>1c:    48 89 18                 mov    QWORD PTR [rax],  rbx<br>1f:    48 8b 58 08              mov    rbx,  QWORD PTR [rax+0x8]<br>23:    48 c1 c3 20              rol    rbx,  0x20<br>27:    48 89 58 08              mov    QWORD PTR [rax+0x8],  rbx<br>2b:    48 8b 58 10              mov    rbx,  QWORD PTR [rax+0x10]<br>2f:    48 c1 c3 20              rol    rbx,  0x20<br>33:    48 89 58 10              mov    QWORD PTR [rax+0x10],  rbx<br>37:    48 8b 58 18              mov    rbx,  QWORD PTR [rax+0x18]<br>3b:    48 c1 c3 20              rol    rbx,  0x20<br>3f:    48 89 58 18              mov    QWORD PTR [rax+0x18],  rbx<br>43:    eb 37                    jmp    0x7c<br>45:    48 8b 45 10              mov    rax,  QWORD PTR [rbp+0x10]<br>49:    48 8b 18                 mov    rbx,  QWORD PTR [rax]<br>4c:    48 c1 c3 0c              rol    rbx,  0xc<br>50:    48 89 18                 mov    QWORD PTR [rax],  rbx<br>53:    48 8b 58 08              mov    rbx,  QWORD PTR [rax+0x8]<br>57:    48 c1 c3 22              rol    rbx,  0x22<br>5b:    48 89 58 08              mov    QWORD PTR [rax+0x8],  rbx<br>5f:    48 8b 58 10              mov    rbx,  QWORD PTR [rax+0x10]<br>63:    48 c1 c3 38              rol    rbx,  0x38<br>67:    48 89 58 10              mov    QWORD PTR [rax+0x10],  rbx<br>6b:    48 8b 58 18              mov    rbx,  QWORD PTR [rax+0x18]<br>6f:    48 c1 c3 0e              rol    rbx,  0xe<br>73:    48 89 58 18              mov    QWORD PTR [rax+0x18],  rbx<br>77:    bb 00 00 00 00           mov    ebx,  0x0<br>7c:    bb 00 00 00 00           mov    ebx,  0x0<br>81:    48 33 c0                 xor    rax,  rax<br>84:    48 8b e5                 mov    rsp,  rbp<br>87:    5d                       pop    rbp<br>88:    ca 08 00                 retf   0x8<br></code></pre></td></tr></table></figure><p>拖到ida64里或者手动看都行，前者需要创建一个segment，从401200到401288，选择64位模式，转化为代码。</p><p><img src="/2023/06/19/2023%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91-DualPersonality//x64-Flow.png"></p><p>可以看到根据之前判断出的程序是否被调试分成了两种操作。回看之前call fword的栈结构，可以发现传入这个函数的参数是input数组。相当于八位一组进行ROL的操作。此外需要注意的是，在这个函数中对于栈并未进行修改，因此retf时会pop ip再pop cs，即程序再次回到call调用时的x86模式，从call语句的下一句开始运行。</p><p>接下来又是和第一次加密一样的操作：</p><p><img src="/2023/06/19/2023%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91-DualPersonality//SecondEnc.png"></p><p>将byte_401290进行反汇编</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs assembly"> 0:    48 33 c0                 xor    rax,  rax<br> 3:    48 b8 c5 14 40 00 00 00 00 00    movabs rax,  0x4014c5<br> d:    89 04 25 00 70 40 00     mov    DWORD PTR ds:0x407000,  eax<br>14:    48 8d 04 25 14 70 40 00          lea    rax,  ds:0x407014<br>1c:    8a 18                    mov    bl,  BYTE PTR [rax]<br>1e:    8a 48 04                 mov    cl,  BYTE PTR [rax+0x4]<br>21:    22 d9                    and    bl,  cl<br>23:    88 18                    mov    BYTE PTR [rax],  bl<br>25:    8a 58 04                 mov    bl,  BYTE PTR [rax+0x4]<br>28:    8a 48 08                 mov    cl,  BYTE PTR [rax+0x8]<br>2b:    0a d9                    or     bl,  cl<br>2d:    88 58 04                 mov    BYTE PTR [rax+0x4],  bl<br>30:    8a 58 08                 mov    bl,  BYTE PTR [rax+0x8]<br>33:    8a 48 0c                 mov    cl,  BYTE PTR [rax+0xc]<br>36:    32 d9                    xor    bl,  cl<br>38:    88 58 08                 mov    BYTE PTR [rax+0x8],  bl<br>3b:    8a 58 0c                 mov    bl,  BYTE PTR [rax+0xc]<br>3e:    f6 d3                    not    bl<br>40:    88 58 0c                 mov    BYTE PTR [rax+0xc],  bl<br>43:    48 33 c0                 xor    rax,  rax<br>46:    ff 24 25 50 70 40 00     jmp    QWORD PTR ds:0x407050<br></code></pre></td></tr></table></figure><p><strong>注意这里已经修改了407000处的内容！</strong></p><p>407014处内存：</p><p><img src="/2023/06/19/2023%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91-DualPersonality//Mem.png"></p><p>可以解出处理过后为0x4,0x77,0x82,0x4a，之后利用jmp    QWORD PTR ds:0x407050 跳转到407050处，但是此时还是在x64模式下运行，所以此时返回地址处虽然能够显示部分看似合理的汇编指令，但是其实使用了错误的模式，正确的指令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs assembly"> 0:    83 c4 08                 add    esp,  0x8<br> 3:    85 c0                    test   eax,  eax<br> 5:    75 05                    jne    0xc<br> 7:    48 8b 04 25 c8 70 40 00          mov    rax,  QWORD PTR ds:0x4070c8<br> f:    48 83 f8 20              cmp    rax,  0x20<br>13:    74 40                    je     0x55<br>15:    48 33 d2                 xor    rdx,  rdx<br>18:    48 b9 04 00 00 00 00 00 00 00    movabs rcx,  0x4<br>22:    48 f7 f1                 div    rcx<br>25:    48 8d 1c 25 14 70 40 00          lea    rbx,  ds:0x407014<br>2d:    8a 14 93                 mov    dl,  BYTE PTR [rbx+rdx*4]<br>30:    48 8b 04 25 c8 70 40 00          mov    rax,  QWORD PTR ds:0x4070c8<br>38:    48 8d 1c 25 60 70 40 00          lea    rbx,  ds:0x407060<br>40:    8a 0c 03                 mov    cl,  BYTE PTR [rbx+rax*1]<br>43:    32 ca                    xor    cl,  dl<br>45:    88 0c 03                 mov    BYTE PTR [rbx+rax*1],  cl<br>48:    48 ff c0                 inc    rax<br>4b:    48 89 04 25 c8 70 40 00          mov    QWORD PTR ds:0x4070c8,  rax<br>53:    eb b2                    jmp    0x7<br>55:    44 b8 00 70 40 00        rex.R mov eax,  0x407000<br>5b:    48 ff 28                 rex.W jmp FWORD PTR [rax]<br></code></pre></td></tr></table></figure><p>又是一个循环结构，其中407060的内存是我们的input，大致可以写成四位一组异或八遍0x4a827704，之后像之前一样利用0x407000跳转到4014c5开始执行后续程序。</p><p>后续程序其实就非常简单了，就是一个逐位比对。</p><p>总结一下，第一步加密为</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c++">__int64 a = <span class="hljs-number">0x3ca7259d</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span> ;i &lt; <span class="hljs-number">8</span> ;i++)&#123;<br>input[i]+= a;<br>a = a^input[i];<br>&#125;<br></code></pre></td></tr></table></figure><p>第二步加密为分4组循环左移</p><p>第三步加密为异或0x4,0x77,0x82,0x4a</p><h4 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python">tar = [<span class="hljs-number">0xaa</span>,<span class="hljs-number">0x4f</span>,<span class="hljs-number">0x0f</span>,<span class="hljs-number">0xe2</span>,<span class="hljs-number">0xe4</span>,<span class="hljs-number">0x41</span>,<span class="hljs-number">0x99</span>,<span class="hljs-number">0x54</span>,<span class="hljs-number">0x2c</span>,<span class="hljs-number">0x2b</span>,<span class="hljs-number">0x84</span>,<span class="hljs-number">0x7e</span>,<span class="hljs-number">0xbc</span>,<span class="hljs-number">0x8f</span>,<span class="hljs-number">0x8b</span>,<span class="hljs-number">0x78</span>,<span class="hljs-number">0xd3</span>,<span class="hljs-number">0x73</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x5e</span>,<span class="hljs-number">0xae</span>,<span class="hljs-number">0x47</span>,<span class="hljs-number">0x85</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x31</span>,<span class="hljs-number">0xb3</span>,<span class="hljs-number">0x09</span>,<span class="hljs-number">0xce</span>,<span class="hljs-number">0x13</span>,<span class="hljs-number">0xf5</span>,<span class="hljs-number">0x0d</span>,<span class="hljs-number">0xca</span>]<br>xor = [<span class="hljs-number">0x4</span>,<span class="hljs-number">0x77</span>,<span class="hljs-number">0x82</span>,<span class="hljs-number">0x4a</span>]<br>r = [<span class="hljs-number">12</span>,<span class="hljs-number">34</span>,<span class="hljs-number">56</span>,<span class="hljs-number">14</span>]<br>key = <span class="hljs-number">0x3ca7259d</span><br>tmp = []<br>ror = <span class="hljs-keyword">lambda</span> a,b : (a&gt;&gt;b) | ((a&lt;&lt;(<span class="hljs-number">64</span>-b))&amp;((<span class="hljs-number">1</span>&lt;&lt;<span class="hljs-number">64</span>)-<span class="hljs-number">1</span>))<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(tar)):<br>    tar[i] ^= xor[i%<span class="hljs-number">4</span>]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>):<br>    _ = ror(<span class="hljs-built_in">int</span>.from_bytes(tar[i*<span class="hljs-number">8</span>:(i+<span class="hljs-number">1</span>)*<span class="hljs-number">8</span>],<span class="hljs-string">&#x27;little&#x27;</span>),r[i])<br>    tmp.append(_&amp;<span class="hljs-number">0xffffffff</span>)<br>    tmp.append(_&gt;&gt;<span class="hljs-number">32</span>&amp;<span class="hljs-number">0xffffffff</span>)<br>flag = <span class="hljs-string">b&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">8</span>):<br>    nk = key<br>    key ^= tmp[i]<br>    tmp[i] = (tmp[i] - nk)&amp;<span class="hljs-number">0xffffffff</span><br>    flag +=<span class="hljs-built_in">int</span>.to_bytes(tmp[i],<span class="hljs-number">4</span>,<span class="hljs-string">&#x27;little&#x27;</span>)<br><span class="hljs-built_in">print</span>(flag)<br><span class="hljs-comment">#6cc1e44811647d38a15017e389b3f704</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>组会分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>heaven&#39;s gate</tag>
      
      <tag>anti-debug</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
